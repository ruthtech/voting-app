{"version":3,"sources":["components/assets/media/canada-flag.svg","utils/UserContext.js","components/Login.js","components/EditDistrictConfirm.js","components/EditDistrict.js","components/LoadingSpinner.js","components/CandidateDetails.js","components/ViewCandidates.js","components/VoteRow.js","components/VoteSubmitted.js","components/VoteConfirm.js","components/Vote.js","components/Landing.js","mapboxAPIKey-production.js","App.js","index.js"],"names":["module","exports","React","createContext","Login","props","useState","username","setUsername","password","setPassword","UserContext","Consumer","handleLogin","className","Image","src","CanadaFlag","alt","Form","Group","id","Label","Control","type","defaultValue","onChange","event","target","value","Button","variant","onClick","a","async","preventDefault","encodeURI","query","axios","get","user","data","isVerified","log","error","handleFormSubmit","EditDistrictConfirm","location","setLocation","activeComponentId","setActiveComponentId","renderDefault","streetNo","streetName","city","province","postcode","put","newUser","renderActiveComponent","debug","EditDistrict","state","context","replace","newLocation","setState","renderBack","renderConfirm","voter","_doc","login","DropdownButton","title","Dropdown","Item","controlId","this","Component","contextType","LoadingSpinner","Candidate","candidate","getPartyWebsite","party_affiliation","first_name","last_name","district_name","href","ViewCandidates","candidates","setCandidates","setVoter","selectedCandidate","setSelectedCandidate","useEffect","candidateList","loadCandidates","renderCandidateThumbnail","key","Card","party","Title","Text","CandidateDetails","handleSelectCandidate","map","VoteRow","model","index","InputGroup","plaintext","readOnly","Append","Radio","name","aria-label","handleFormSelect","VoteSubmitted","Body","uuid","submitVote","VoteConfirm","Vote","district","disabled","mapboxgl","accessToken","Landing","ref","el","mapContainer","renderEditDistrict","street","number","renderViewCandidates","renderVote","voterLatitude","coordinates","latitude","voterLongitude","longitude","districtBoundaries","newMap","Map","container","style","center","zoom","on","addLayer","setCenter","require","config","level","process","LOGGING_LEVEL","setLevel","remote","apply","format","msg","message","stacktrace","url","App","setUser","component","Provider","userSubset","console","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0468406.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/canada-flag.dea429e4.svg\";","import React from 'react';\r\n\r\nexport default React.createContext();\r\n","// import React from 'react';\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport CanadaFlag from './assets/media/canada-flag.svg';\r\nimport \"./style.css\";\r\n\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleFormSubmit = async (username, password, handleLogin, event) => {\r\n    try {\r\n      event.preventDefault();\r\n\r\n      username = encodeURI(username);\r\n\r\n      let query = `/api/login/${username}/${password}`;\r\n      const user = await axios.get(query);\r\n      if(!user.data.isVerified) {\r\n        // Either the UUID was not found or the password is incorrect.\r\n        // The page will continue to show this Login page until a user is found & verified.\r\n        handleLogin(null);\r\n        return;\r\n      }\r\n\r\n      // Success\r\n      handleLogin(user.data.isVerified);\r\n    } catch ( err ) {\r\n      props.log.error(err);\r\n\r\n      // null means that no user is logged in.\r\n      handleLogin(null);\r\n    }\r\n  };\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n      {\r\n        ({handleLogin}) =>\r\n        <div className=\"container-fluid bg-almostWhite full-screen\">\r\n            <div className=\"row flag-block \">\r\n              <Image className=\"bg-white\" src={CanadaFlag} alt=\"Canada Flag\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col heading\">\r\n                    <h1>Canada Votes Online</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row bottom-page\">\r\n                <div className=\"col\">\r\n                  <Form>\r\n                    <Form.Group id=\"formBasicUUID\">\r\n                      <Form.Label className=\"entry-field-label\">Username</Form.Label>\r\n                      <Form.Control type=\"text\" defaultValue={username} onChange={event => setUsername(event.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group id=\"formBasicPassword\">\r\n                      <Form.Label className=\"entry-field-label\">Password</Form.Label>\r\n                      <Form.Control type=\"password\" defaultValue={password} onChange={event => setPassword(event.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <div className=\"right-align-div\">\r\n                      <Button variant=\"secondary\" type=\"submit\" onClick={(event) => {handleFormSubmit(username, password, handleLogin, event)}}>\r\n                        Sign in\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, {useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport \"./style.css\";\r\nimport Landing from './Landing';\r\nimport EditDistrict from './EditDistrict';\r\nimport UserContext from '../utils/UserContext';\r\n\r\nfunction EditDistrictConfirm(props) {\r\n  const [location, setLocation] = useState(props.location);\r\n  const [username] = useState(props.username);\r\n  const [activeComponentId, setActiveComponentId] = useState(0); // 0 is render default (this confirmation page) and 1 is go back and edit (edit district), 2 is for landing\r\n\r\n    const handleFormSubmit = async (handleLogin) => {\r\n      try {\r\n        let newUser = await axios.put(`/api/updateAddress/${encodeURI(username)}/${encodeURI(location.streetNo)}/${encodeURI(location.streetName)}/${encodeURI(location.city)}/${encodeURI(location.province)}/${encodeURI(location.postcode)}`);\r\n        \r\n        setLocation(newUser.data); // Update this UI page with the new address. (If the address was invalid then the closest match was returned.)\r\n\r\n        handleLogin(newUser.data); // Update the user in the context.\r\n\r\n      } catch ( err ) {\r\n        props.log.error(err);\r\n      }\r\n    };\r\n\r\n    // active component id 1\r\n    const renderEditDistrict = () => {\r\n      props.debug(\"location is \", location);\r\n      return <EditDistrict location={location}/>;\r\n    };\r\n\r\n    // active component id 2\r\n    const renderHome = () => {\r\n      return <Landing />;\r\n    };\r\n\r\n    // active component id 0\r\n    const renderDefault = (handleLogin) => {\r\n      return (\r\n        <div className=\"container-fluid bg-almostWhite full-screen\">\r\n        <div className=\"row pt-3\">\r\n          <div className=\"col\">\r\n            <h4>Is this correct?</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h6>If there were any problems locating the address that you entered, the closest address is displayed below.</h6>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col bg-white centre-align-div\">\r\n            <p>{location.streetNo} {location.streetName}, {location.city}, {location.province}, {location.postcode}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <Button variant=\"secondary w-100\" type=\"button\" \r\n              onClick={ () => { setActiveComponentId(1)}}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n          <div className=\"col\">\r\n            <Button variant=\"secondary w-100\" type=\"submit\" \r\n                onClick={\r\n                () => {\r\n                  handleFormSubmit(handleLogin);\r\n                  setActiveComponentId(2);\r\n                }}>\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    };\r\n\r\n    const renderActiveComponent = (handleLogin) => {\r\n      switch(activeComponentId) {\r\n        case(1): {\r\n          return renderEditDistrict();\r\n        }\r\n\r\n        case(2): {\r\n          return renderHome();\r\n        }\r\n\r\n        case(0):\r\n        default: {\r\n          return renderDefault(handleLogin);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <UserContext.Consumer >\r\n       {\r\n         ({handleLogin}) => {\r\n           return renderActiveComponent(handleLogin)\r\n         }\r\n      }\r\n       </UserContext.Consumer>\r\n      );\r\n}\r\n\r\nexport default EditDistrictConfirm;\r\n","import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport EditDistrictConfirm from './EditDistrictConfirm';\r\nimport Landing from './Landing';\r\nimport \"./style.css\";\r\nimport log from 'loglevel';\r\n\r\nclass EditDistrict extends Component {\r\n  // Location data is not escaped until right before it is sent to axios. \r\n  // Sending in location instead of user/voter because the query to the server to find out if the address exists isn't associated with a user. \r\n  state = {\r\n    location: this.props.location,\r\n    activeComponentId: 0 // 0 means render default form, 1 means EditDistrictConfirm\r\n  }\r\n\r\n  handleFormSubmit = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      const log = this.context.log;\r\n      // Check if the address is valid or not. If it's not, replace it with the nearest valid address.\r\n      // escape is deprecated and doesn't work on the Quebec city names with accents. Use encodeURI instead.\r\n      log.debug(`EditDistrict about to call /api/address/${encodeURI(this.state.location.streetNo)}/${encodeURI(this.state.location.streetName)}/${encodeURI(this.state.location.city)}/${encodeURI(this.state.location.province)}/${encodeURI(this.state.location.postcode.replace(/\\s/g, \"\"))}`);\r\n      let newLocation = await axios.get(`/api/address/${encodeURI(this.state.location.streetNo)}/${encodeURI(this.state.location.streetName)}/${encodeURI(this.state.location.city)}/${encodeURI(this.state.location.province)}/${encodeURI(this.state.location.postcode.replace(/\\s/g, \"\"))}`);\r\n      log.debug(\"EditDistrict, newLocation is \", newLocation.data);\r\n      this.setState({ location: newLocation.data });\r\n    } catch( err ) {\r\n      log.error(err);\r\n    }\r\n  }\r\n\r\n  // active component id 2\r\n  renderBack = () => {\r\n    return <Landing />;\r\n  };\r\n\r\n  // active component id 1\r\n  renderConfirm = () => {\r\n    const voter = this.context.user;\r\n    const log = this.context.log;\r\n    log.debug(\"EditDistrict about to confirm, location is \", this.state.location);\r\n    return <EditDistrictConfirm location={this.state.location} username={voter._doc.login.username} log={log}/>\r\n  };\r\n\r\n  // active component id 0\r\n  renderDefault = () => {\r\n    const log = this.context.log;\r\n    log.debug(\"EditDistrict rendering page, location is \", this.state.location);\r\n    return (\r\n      <div className=\"container-fluid bg-almostWhite full-screen\">\r\n          <div className=\"row\">\r\n              <div className=\"col\">\r\n                  <h1>Enter your new address</h1>\r\n              </div>\r\n          </div>\r\n          <div className=\"row pb-3\">\r\n            <div className=\"col \">\r\n              <Form>\r\n                  <Form.Group id=\"formBasicAddress\">\r\n                    <Form.Label id=\"streetNoLabel\" className=\"entry-field-label\">Street Number</Form.Label>\r\n                    <Form.Control id=\"streetNo\" type=\"number\" value={this.state.location.streetNo} onChange={event => this.setState({ location: {...this.state.location, streetNo:event.target.value}})} />\r\n\r\n                    <Form.Label className=\"entry-field-label\">Address</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.state.location.streetName} onChange={event => this.setState({ location: {...this.state.location, streetName:event.target.value}})}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"formBasicCity\">\r\n                    <Form.Label className=\"entry-field-label\">City</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.state.location.city} onChange={event => this.setState({ location: {...this.state.location, city:event.target.value}})}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"formBasicPostalcode\">\r\n                    <Form.Label className=\"entry-field-label\">Postal Code</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.state.location.postcode} onChange={event => this.setState({ location: {...this.state.location, postcode:event.target.value}})}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group value={this.state.location.province} className=\"right-align-div\">\r\n                    <DropdownButton id=\"provinceDropdown\" title=\"Province/Territory\" variant=\"secondary\">\r\n                      <Dropdown.Item id=\"Alberta\" onClick={() => {this.setState({ location: {...this.state.location, province:'Alberta'}})}}>Alberta</Dropdown.Item>\r\n                      <Dropdown.Item id=\"BritishColumbia\" onClick={() => this.setState({ location: {...this.state.location, province:'British Columbia'}})}>British Columbia</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Manitoba\" onClick={() => this.setState({ location: {...this.state.location, province:'Manitoba'}})}>Manitoba</Dropdown.Item>\r\n                      <Dropdown.Item id=\"NewBrunswick\" onClick={() => this.setState({ location: {...this.state.location, province:'New Brunswick'}})}>New Brunswick</Dropdown.Item>\r\n                      <Dropdown.Item id=\"NewfoundlandandLabrador\" onClick={() => this.setState({ location: {...this.state.location, province:'Newfoundland and Labrador'}})}>Newfoundland and Labrador</Dropdown.Item>\r\n                      <Dropdown.Item id=\"NorthwestTerritories\" onClick={() => this.setState({ location: {...this.state.location, province:'Northwest Territories'}})}>Northwest Territories</Dropdown.Item>\r\n                      <Dropdown.Item id=\"NovaScotia\" onClick={() => this.setState({ location: {...this.state.location, province:'Nova Scotia'}})}>Nova Scotia</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Nunavut\" onClick={() => this.setState({ location: {...this.state.location, province:'Nunavut'}})}>Nunavut</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Ontario\" onClick={() => this.setState({ location: {...this.state.location, province:'Ontario'}})}>Ontario</Dropdown.Item>\r\n                      <Dropdown.Item id=\"PrinceEdwardIsland\" onClick={() => this.setState({ location: {...this.state.location, province:'Prince Edward Island'}})}>Prince Edward Island</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Quebec\" onClick={() => this.setState({ location: {...this.state.location, province:'Quebec'}})}>Quebec</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Saskatchewan\" onClick={() => this.setState({ location: {...this.state.location, province:'Saskatchewan'}})}>Saskatchewan</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Yukon\" onClick={() => this.setState({ location: {...this.state.location, province:'Yukon'}})}>Yukon</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formSubmit\" className=\"centre-align-div\">\r\n                    <Button variant=\"secondary w-50 mr-3\" type=\"button\" \r\n                      onClick={ () => { this.setState({ activeComponentId: 2 }); } }>\r\n                      Back\r\n                    </Button>\r\n                    <Button variant=\"secondary w-50 ml-3\" type=\"submit\" \r\n                      onClick={(event) => {\r\n                        this.handleFormSubmit(event); // Check that the address exists and send it, or the closest matching existing address, to the confirmation page.\r\n                        this.setState({ activeComponentId: 1 });; // switch to the Edit District Confirm page\r\n                      }}>\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  renderActiveComponent = () => {\r\n    switch(this.state.activeComponentId) {\r\n      case(2): {\r\n        return this.renderBack();\r\n      }\r\n\r\n      case(1): {\r\n        return this.renderConfirm();\r\n      }\r\n\r\n      case(0):\r\n      default: {\r\n        return this.renderDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.renderActiveComponent();\r\n  }\r\n}\r\nEditDistrict.contextType = UserContext;\r\n\r\nexport default EditDistrict;\r\n","import React from 'react';\r\n\r\nfunction LoadingSpinner() {\r\n\r\n    return (\r\n        <div>\r\n            <i className=\"fa fa-spinner fa-spin\" /> Loading...\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n// import Image from 'react-bootstrap/Image';\r\n// import Card from 'react-bootstrap/Card';\r\nimport Landing from './Landing';\r\nimport ViewCandidates from './ViewCandidates';\r\nimport \"./style.css\";\r\n\r\nfunction Candidate(props) {\r\n    const [candidate] = useState(props.candidate);\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 is for candidate details, 1 is for list of candidates, 2 is for Landing\r\n\r\n    const getPartyWebsite = (party_affiliation) => {\r\n        switch(party_affiliation) {\r\n            case('Conservative Party of Canada'): {\r\n                return \"http://www.conservative.ca\";\r\n            }\r\n\r\n            case('Green Party of Canada'): {\r\n                return \"http://greenparty.ca\";\r\n            }\r\n\r\n            case('Liberal Party of Canada'): {\r\n                return \"http://www.liberal.ca\";\r\n            }\r\n\r\n            case(\"New Democratic Party\"): {\r\n                return \"http://www.ndp.ca\";\r\n            }\r\n\r\n            case(\"Bloc Québécois\"): {\r\n                return \"http://blocquebecois.org\";\r\n            }\r\n\r\n            default: {\r\n                return \"https://www.elections.ca/content.aspx?section=pol&dir=par&document=index&lang=e\"; // indicate no party website by directing them to the general Elections Canada web site listing all of them\r\n            }\r\n        }\r\n    }\r\n\r\n    // Active component Id 0\r\n    const renderCandidateDetails = () => {\r\n        return (\r\n            <div className=\"container-fluid full-screen bg-almostWhite\">\r\n                <div className=\"row\">\r\n                    {/* <div className=\"col text-center\">\r\n                        <Image src={candidate.pictureURL} />\r\n                    </div> */}\r\n                    <div className=\"col\">\r\n                        <h1>{candidate.first_name} {candidate.last_name}</h1>\r\n                        <h5>{candidate.party_affiliation}</h5>\r\n                        <h5>{candidate.district_name}</h5>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <Card className={candidate.party}>\r\n                      <Card.Body>\r\n                        <Card.Title>Contact</Card.Title>\r\n                        <Card.Text><b>Phone:</b> {candidate.phone}</Card.Text>\r\n                        <Card.Text><b>Office Address:</b> {candidate.address}</Card.Text>\r\n                        <Card.Text><b>Email:</b> {candidate.email}</Card.Text>\r\n                        <Card.Text><b>Twitter:</b> <Card.Link href={candidate.twitter}>{candidate.twitter}</Card.Link></Card.Text>\r\n                        <Card.Text><b>Website:</b> <Card.Link href={candidate.website}>{candidate.website}</Card.Link></Card.Text>                      \r\n                      </Card.Body>\r\n                    </Card>\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col centre-align-div\">\r\n                        <h4><a href={getPartyWebsite(candidate.party_affiliation)}>{candidate.party_affiliation}</a></h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col centre-align-div\">\r\n                        <h4><a href=\"https://www.elections.ca/content.aspx?section=pol&dir=par&document=index&lang=e\">Elections Canada Registered Political Parties</a></h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row p-3\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"secondary w-100\" onClick={ () => { setActiveComponentId(1) }}>View Candidates</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button variant=\"secondary w-100\" onClick={ () => { setActiveComponentId(2) }}>Home</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Active component id 1\r\n    const renderAllCandidates = () => {\r\n        return <ViewCandidates />;\r\n    }\r\n\r\n    // Active component id 2\r\n    const renderHome = () => {\r\n        return (\r\n          <Landing />\r\n        );\r\n    }    \r\n\r\n    const renderActiveComponent = () => {\r\n        switch (activeComponentId) {\r\n            case(2): {\r\n              return renderHome();\r\n            }\r\n      \r\n            case(1): {\r\n              return renderAllCandidates();\r\n            }\r\n      \r\n            case(0): \r\n            default: {\r\n              return renderCandidateDetails();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        renderActiveComponent()\r\n    );\r\n}\r\n\r\nexport default Candidate;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport Landing from './Landing';\r\nimport CandidateDetails from './CandidateDetails';\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"./style.css\";\r\n\r\nfunction ViewCandidates(props) {\r\n    const [candidates, setCandidates] = useState([]);\r\n    const [voter, setVoter] = useState(null);\r\n    const [selectedCandidate, setSelectedCandidate] = useState(null); \r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 for Loading, 1 for Landing, 2 for list of candidates\r\n\r\n    useEffect(() => {\r\n      async function loadCandidates() {\r\n        try {\r\n          if(voter === null) {\r\n            // Not ready to load candidates until we know what district the user is in\r\n            return;\r\n          }\r\n  \r\n          if(activeComponentId === 0) {\r\n            let postcode = voter._doc.location.postcode.replace(/\\s/g, \"\");\r\n            props.log.debug(`/api/candidates/${postcode}`);\r\n            const candidates = await axios.get(`/api/candidates/${postcode}`);\r\n            props.log.debug(\"View Candidates found \", candidates);\r\n            setCandidates(candidates.data.candidateList);\r\n            setActiveComponentId(2);\r\n          }\r\n        }\r\n        catch( err ) {\r\n            props.log.error(err);\r\n            setCandidates([]);\r\n        }\r\n      }\r\n      loadCandidates();\r\n    }, [voter]);\r\n\r\n    const renderDefault = () => {\r\n      return (\r\n        <div className=\"container-fluid bg-almostWhite\">\r\n          <div className=\"row \">\r\n            {\r\n             candidates.map( (candidate) => {\r\n              props.log.debug(candidate)\r\n               return renderCandidateThumbnail(candidate);\r\n             })\r\n            }\r\n          </div>\r\n          <div className=\"row mt-3 pb-3\">\r\n            <div className=\"col text-right\">\r\n                <Button variant=\"secondary\" onClick={ () => { setActiveComponentId(1) } }>\r\n                Home\r\n                </Button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      );\r\n    }\r\n\r\n    const renderHome = () => {\r\n      return (\r\n        <Landing />\r\n      );\r\n    }\r\n  \r\n    const renderCandidateDetails = (candidate) => {\r\n      return <CandidateDetails candidate={candidate} handleSelectCandidate={setSelectedCandidate} log={props.log}/>\r\n    };\r\n  \r\n    const renderCandidateThumbnail = (candidate) => {\r\n      return (\r\n        <div key={candidate.id} className=\"col-12 col-sm-4 mt-3\">\r\n        <Card className={candidate.party}>         \r\n          {/* <Card.Img variant=\"top\" src={candidate.pictureURL}   /> */}\r\n          <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n          <Card.Text>\r\n          {candidate.party_affiliation}\r\n          </Card.Text>\r\n          <button className=\"btn btn-secondary\" \r\n            onClick={(event) => {\r\n              setSelectedCandidate(candidate);\r\n              setActiveComponentId(3);\r\n            }}>\r\n            View {candidate.first_name} {candidate.last_name}</button>\r\n        </Card>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n      switch(activeComponentId) {\r\n        case(0): {\r\n          return <LoadingSpinner />;\r\n        }\r\n\r\n        case(1): {\r\n          return renderHome();\r\n        }\r\n\r\n        case(3): {\r\n          return renderCandidateDetails(selectedCandidate);\r\n        }\r\n\r\n        case(4): {\r\n          return candidates.map( (candidate) => {\r\n            return renderCandidateThumbnail(candidate);\r\n          });\r\n        }\r\n\r\n        case(2):\r\n        default: {\r\n          return renderDefault();\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n       {\r\n         ({user}) => {\r\n           setVoter(user);\r\n\r\n           return renderActiveComponent();\r\n         }\r\n       }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default ViewCandidates;\r\n","import React from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"./style.css\";\r\n\r\nfunction VoteRow(props) {\r\n  return props.model.map( (candidate, index) => {\r\n    return (\r\n      <InputGroup key={index} className=\"pb-3\">\r\n        <Form.Control plaintext readOnly className=\"bg-white text-right pr-3\" defaultValue={candidate.last_name + \", \" + candidate.first_name + ' / ' + candidate.party_affiliation} />\r\n        <InputGroup.Append>\r\n          <InputGroup.Radio name=\"votingGroup\" aria-label={candidate.last_name + \", \" + candidate.first_name + ' / ' + candidate.party_affiliation} onChange={() => props.handleFormSelect(candidate)}/>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    );\r\n  });\r\n}\r\n\r\nexport default VoteRow;","import React, {useState} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport Landing from \"./Landing\";\r\nimport axios from 'axios';\r\nimport './style.css';\r\n\r\nfunction VoteSubmitted(props) {\r\n    const [candidate] = useState(props.candidate);\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 means the confirmation message, 1 means landing page\r\n\r\n    // Could have done this on the last page (VoteConfirm) ... decisions, decisions ...\r\n    // Tell the server to mark this user as having voted and increment the candidate's # of votes by 1.\r\n    const submitVote = async (user, candidate) => {\r\n      try {\r\n        await axios.put(`/api/voter/${user.uuid}/${candidate.id}`);\r\n      }\r\n      catch( err ) {\r\n        props.log.error(err);    \r\n      }\r\n    }\r\n\r\n    // active id 1\r\n    const renderHome = () => {\r\n        return <Landing />;\r\n    }\r\n\r\n    // active id 0\r\n    const renderDefault = () => {\r\n        return (\r\n            <div className={\"container-fluid bg-almostWhite full-screen\"} >\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h1>You voted for</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row pb-3\">\r\n                    <div className=\"col\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                        <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n                        <Card.Text>{candidate.party_affiliation}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row pt-3\">\r\n                    <div className=\"col\">\r\n                        <h2>Thank you! Your vote has been registered.</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col right-align-div\">\r\n                        <Button variant=\"secondary w-50\" onClick={() => {setActiveComponentId(1)}}>Home</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n        switch(activeComponentId) {\r\n            case(1): {\r\n                return renderHome();\r\n            }\r\n\r\n            case(0):\r\n            default: {\r\n                return renderDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UserContext.Consumer>\r\n        {  \r\n          ({user}) => {\r\n            submitVote(user, candidate);\r\n            return renderActiveComponent();\r\n          }\r\n        }\r\n        </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default VoteSubmitted;\r\n","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport Vote from \"./Vote\";\r\nimport VoteSubmitted from \"./VoteSubmitted\";\r\nimport \"./style.css\";\r\n\r\nfunction VoteConfirm(props) {\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 is for default, 1 is for edit/go back, 2 is for save/confirm\r\n    const [candidate] = useState(props.candidate);\r\n\r\n    // Active Component Id 0\r\n    const renderDefault = () => {\r\n      return (\r\n        <div className={\"container-fluid bg-almostWhite full-screen\"}>\r\n            <div className=\"row pb-3\">\r\n                <div className=\"col\">\r\n                    <h1>You are voting for</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row pb-3 text-center\">\r\n                <div className=\"col\">\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n                      <Card.Text>{candidate.party_affiliation}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row pt-3\">\r\n                <div className=\"col\">\r\n                    <h1>Is this correct?</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Button variant=\"secondary w-100\" onClick={() => {setActiveComponentId(1)}}>Edit</Button>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <Button variant=\"secondary w-100\" onClick={() => {setActiveComponentId(2)}}>Confirm</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // active component id 1\r\n    const renderEditVote = () => {\r\n        return <Vote />;\r\n    }\r\n\r\n    // active component id 2\r\n    const renderConfirm = () => {\r\n        return <VoteSubmitted candidate={candidate}/>;\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n        switch(activeComponentId) {\r\n            case(1): {\r\n                return renderEditVote();\r\n            }\r\n\r\n            case(2): {\r\n                return renderConfirm();\r\n            }\r\n\r\n            case(0):\r\n            default: {\r\n                return renderDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n      {\r\n        ({user}) => renderActiveComponent()\r\n      }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default VoteConfirm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport VoteRow from './VoteRow';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport VoteConfirm from './VoteConfirm';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction Vote(props) {\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [selectedCandidate, setSelectedCandidate] = useState(null);\r\n  const [activeComponentId, setActiveComponentId] = useState(0); // 0 for the loading spinner, 1 for the page listing all of the voting rows, and 2 for vote confirm\r\n  const [voter, setVoter] = useState(null);\r\n\r\n  useEffect( () => {\r\n    async function loadCandidates() {\r\n      try {\r\n        if(voter === null) {\r\n          // Not ready to load candidates until we know what district the user is in\r\n          return;\r\n        }\r\n  \r\n        if(activeComponentId === 0) {\r\n          props.log.debug(voter._doc);\r\n          let postcode = voter._doc.location.postcode.replace(/\\s/g, \"\");\r\n          props.log.debug(`Vote loadCandidates with /api/candidates/${postcode}`);\r\n          const candidates = await axios.get(`/api/candidates/${postcode}`);\r\n          props.log.debug(\"Vote loadCandidates after \", candidates.data);\r\n          setCandidates(candidates.data.candidateList);\r\n          setActiveComponentId(2);\r\n        }\r\n      }\r\n      catch( err ) {\r\n          props.log.error(err);\r\n          setCandidates([]);\r\n      }\r\n    };\r\n    loadCandidates();  \r\n  }, [voter]);\r\n\r\n\r\n  const handleFormSelect = async (candidate) => {\r\n    props.log.debug(\"Vote, candidate selected, candidate is \", candidate);\r\n    setSelectedCandidate(candidate);\r\n  };\r\n\r\n  // Active Component Id 0\r\n  const renderLoading = () => {\r\n    return <LoadingSpinner />;\r\n  };\r\n\r\n  // Active Component Id 1\r\n  const renderDefault = () => {\r\n    return  (\r\n      <div className=\"container-fluid bg-almostWhite full-screen\">\r\n        <div className=\"row pt-3\">\r\n          <div className=\"col\">\r\n            <h1>Vote in District {voter._doc.location.district}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row pt-3 pb-3\">\r\n            <div className=\"col\">\r\n                <VoteRow\r\n                  model={candidates}\r\n                  handleFormSelect={handleFormSelect}\r\n                />\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col right-align-div\">\r\n              <Button variant=\"secondary w-50\" type=\"submit\" onClick={\r\n                () => { setActiveComponentId(1) }} disabled={selectedCandidate===null}>\r\n                Vote\r\n              </Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\n  // Active Component Id 2\r\n  const renderVoteConfirm = () => {\r\n    return <VoteConfirm candidate={selectedCandidate} log={props.log}/>\r\n  };\r\n\r\n  const renderActiveComponent = () => {\r\n    switch(activeComponentId) {\r\n      case(0): {\r\n        return renderLoading();\r\n      }\r\n\r\n      case(1): {\r\n        return renderVoteConfirm();\r\n      }\r\n\r\n      case(2):\r\n      default: {\r\n        return renderDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Consumer>\r\n    {\r\n      ({user}) => {\r\n        setVoter(user);\r\n        return renderActiveComponent();\r\n      }\r\n    }\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Vote;\r\n","import React, { Component } from \"react\";\r\nimport UserContext from '../utils/UserContext';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport \"./style.css\";\r\nimport mapboxgl from 'mapbox-gl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport EditDistrict from \"./EditDistrict\";\r\nimport ViewCandidates from './ViewCandidates';\r\nimport Vote from './Vote';\r\n\r\n// Because any key embedded in the .env file will be included in the build, \r\n// which reveals an API key that we don't want revealed, write the development key in a\r\n// file that is never checked into GitHub and is never read at runtime.\r\nimport productionMapToken from \"../mapboxAPIKey-production.js\"; // when deploying to Heroku\r\n//import developmentMapToken from \"../mapboxAPIKey-development.js\"; // when testing locally\r\n\r\nmapboxgl.accessToken = productionMapToken;\r\n\r\n// const ottawaLat = 45.416667;\r\n// const ottawaLong = -75.7;\r\n\r\nclass Landing extends Component {\r\n  // Setting the component's initial state\r\n  state = {\r\n    activeComponentId: 0,\r\n    map: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(this.state.activeComponentId === 0) {\r\n      const voter = this.context.user;\r\n      const log = this.context.log;\r\n      const voterLatitude = voter._doc.location.coordinates.latitude;\r\n      const voterLongitude = voter._doc.location.coordinates.longitude;\r\n      const districtBoundaries = voter._doc.location.districtBoundaries;\r\n      log.debug(\"voter location is \", voter._doc.location);\r\n\r\n      const newMap = new mapboxgl.Map({\r\n        container: this.mapContainer,\r\n        style: 'mapbox://styles/mapbox/streets-v11',\r\n        center: [voterLongitude, voterLatitude],\r\n        zoom: 12\r\n      });\r\n\r\n      log.debug(\"district boundaries are \", districtBoundaries);\r\n\r\n      newMap.on('load', () => {\r\n        newMap.addLayer({\r\n          'id': voter._doc.location.district,\r\n          'type': 'fill',\r\n          'source': {\r\n            'type': 'geojson',\r\n            'data': {\r\n              'type': 'Feature',\r\n              'geometry': districtBoundaries\r\n            }\r\n          },\r\n          'layout': {},\r\n          'paint': {\r\n            'fill-color': '#D3D3D3',\r\n            'fill-opacity': 0.8\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({ map: newMap });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.activeComponentId === 0) {\r\n      let voter = this.context.user;\r\n      const voterLatitude = voter._doc.location.coordinates.latitude;\r\n      const voterLongitude = voter._doc.location.coordinates.longitude;\r\n\r\n      this.state.map.setCenter([voterLongitude, voterLatitude]);\r\n    }\r\n  }\r\n  \r\n  renderDefault = () => {\r\n    let voter = this.context.user;\r\n    return (\r\n      <div className=\"container-fluid full-screen\">\r\n        <div className=\"row\">\r\n            <div className=\"col-8 col-sm-9 mt-3 ml-3 bg-white text-center pt-2 mapFormWidget\">\r\n                Your district is {voter._doc.location.district}\r\n            </div>\r\n            <div className=\"col-3 col-sm-2 mt-3\">\r\n              <Button variant=\"secondary w-100\" \r\n                      onClick={ () => { this.setState({ activeComponentId: 2 })}} >\r\n                  Edit</Button>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n           <div ref={el => this.mapContainer = el} className=\"col mapContainer\" />\r\n        </div>\r\n        <div className=\"row pb-3\">\r\n            <div className=\"col\">\r\n                <Button variant=\"secondary w-100\" \r\n                    onClick={ () => { this.setState({ activeComponentId: 3 })}} >\r\n                    View Candidates</Button>\r\n            </div>\r\n            <div className=\"col\">\r\n                <Button variant=\"secondary w-100\"\r\n                    onClick={ () => { this.setState({ activeComponentId: 4 })}} >\r\n                    Vote</Button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }  \r\n\r\n  // // active component 1\r\n  // renderLoading = () => {\r\n  //   return <LoadingSpinner />;\r\n  // };\r\n\r\n  // active component 2\r\n  renderEditDistrict = () => {\r\n    const voter = this.context.user;\r\n    const location = {\r\n      streetNo: voter._doc.location.street.number,\r\n      streetName: voter._doc.location.street.name,\r\n      city: voter._doc.location.city,\r\n      province: voter._doc.location.state,\r\n      postcode: voter._doc.location.postcode\r\n    };\r\n  \r\n    return <EditDistrict location={location}/>;\r\n  };\r\n\r\n  \r\n  // active component 3\r\n  renderViewCandidates = () => {\r\n    return <ViewCandidates log={this.context.log}/>;\r\n  }\r\n\r\n\r\n  // active component 4\r\n  renderVote = () => {\r\n    return <Vote log={this.context.log}/>;\r\n  }\r\n\r\n  renderActiveComponent = () => {\r\n    switch(this.state.activeComponentId) {\r\n      case(4): {\r\n        return this.renderVote();\r\n      }\r\n\r\n      case(3): {\r\n          return this.renderViewCandidates();\r\n      }\r\n\r\n      case(2): {\r\n        return this.renderEditDistrict();\r\n      }\r\n\r\n      // case(1): {\r\n      //     return this.renderLoading();\r\n      // }\r\n\r\n      case(0):\r\n      default: {\r\n          return this.renderDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.renderActiveComponent();\r\n  }\r\n};\r\nLanding.contextType = UserContext;\r\n\r\nexport default Landing;\r\n","let productionMapToken = \"pk.eyJ1IjoiZXNjaGVyZmFuIiwiYSI6ImNrNHl4bGszeDA1Z2MzZXM3enl3dXAwdGQifQ.GQLGYq0XDlXApqGgkKqF2A\";\r\nexport default productionMapToken;\r\n","import React, { useState } from 'react';\r\nimport Login from \"./components/Login\";\r\nimport Landing from \"./components/Landing\";\r\nimport UserContext from './utils/UserContext';\r\nimport log from 'loglevel';\r\nimport remote from 'loglevel-plugin-remote';\r\n\r\nrequire('dotenv').config();\r\n\r\n// import LoadingSpinner from './components/LoadingSpinner';\r\n\r\n// When debugging the React code, set the user data as though they logged in via Login.\r\n// When not debugging, comment out the below import.\r\n//import hannahWhite from './debugReact'; \r\n\r\nconst level = (process.env.LOGGING_LEVEL) ? process.env.LOGGING_LEVEL : 'info';\r\nlog.setLevel(level);\r\nconst customJSON = log => ({\r\n  msg: log.message,\r\n  level: level,\r\n  stacktrace: log.stacktrace\r\n});\r\n\r\nremote.apply(log, { format: customJSON, url: '/logger' });\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState( null );\r\n  // FOR DEBUGGING REACT. Comment out and replace with the line above when in production.\r\n  //const [user, setUser] = useState(hannahWhite); \r\n  // END DEBUGGING REACT\r\n\r\n  // This React application was designed to have only two roots:\r\n  //   1. Login \r\n  //   2. Landing (after user has logged in)\r\n  //\r\n  // You cannot reach any of the components via a Router. This was done\r\n  // so that we do not need to check, in every component, if the user has logged\r\n  // in or not. The URL cannot reach any components except Login or Landing. \r\n  let component = null;\r\n  if(user != null) {\r\n    component = <Landing />\r\n  } else {\r\n    component = <Login log={log}/>\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={ {\r\n      user: user,\r\n      handleLogin: (newUser) => {\r\n        const userSubset = {\r\n          name: newUser._doc.name,\r\n          district: newUser._doc.location.district,\r\n          street: newUser._doc.location.street,\r\n          city: newUser._doc.location.city,\r\n          postcode: newUser._doc.location.postcode,\r\n          username: newUser._doc.login.username\r\n        }\r\n        console.log(\"App Context \", JSON.stringify(userSubset)); // Ironically, debugging the logging\r\n        log.debug(\"App Context \", JSON.stringify(userSubset)); \r\n        setUser(newUser)\r\n      },\r\n      log: log\r\n    } }>\r\n      { component }\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}