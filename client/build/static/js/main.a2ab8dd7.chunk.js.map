{"version":3,"sources":["utils/UserContext.js","components/Login.js","components/EditDistrictConfirm.js","components/EditDistrict.js","components/LoadingSpinner.js","components/CandidateDetails.js","components/ViewCandidates.js","components/VoteRow.js","components/VoteSubmitted.js","components/VoteConfirm.js","components/Vote.js","components/Landing.js","App.js","index.js"],"names":["React","createContext","Login","useState","username","setUsername","password","setPassword","UserContext","Consumer","handleLogin","className","Form","Group","controlId","Label","Control","type","value","onChange","event","target","Button","variant","onClick","a","async","preventDefault","escape","query","axios","get","user","console","log","data","isVerified","district","handleFormSubmit","EditDistrictConfirm","props","setUser","activeComponentId","setActiveComponentId","renderDefault","streetNo","unescape","address","city","province","postalCode","put","_doc","login","newUser","renderActiveComponent","EditDistrict","voter","setVoter","setStreetNo","setAddress","setCity","setProvince","setPostalCode","id","DropdownButton","title","Dropdown","Item","eAddress","eCity","replace","err","LoadingSpinner","Candidate","candidate","getPartyWebsite","party_affiliation","first_name","last_name","district_name","href","ViewCandidates","candidates","setCandidates","selectedCandidate","setSelectedCandidate","useEffect","postcode","location","candidateList","loadCandidates","renderCandidateThumbnail","key","Card","party","Title","Text","CandidateDetails","handleSelectCandidate","map","VoteRow","model","index","InputGroup","plaintext","readOnly","defaultValue","Append","Radio","name","aria-label","handleFormSelect","VoteSubmitted","Body","uuid","submitVote","VoteConfirm","Vote","disabled","Landing","App","component","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2ab8dd7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext();\r\n","// import React from 'react';\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport \"./style.css\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleFormSubmit = async (username, password, handleLogin, event) => {\r\n    try {\r\n      event.preventDefault();\r\n      username = escape(username);\r\n\r\n      let query = `/api/login/${username}/${password}`;\r\n      const user = await axios.get(query);\r\n      console.log(\"Login.js login with username \" + username + \" found the following user \");\r\n      console.log(user);\r\n      console.log(\"user district is \" + user.data.isVerified.district);\r\n      if(!user.data.isVerified) {\r\n        // Either the UUID was not found or the password is incorrect.\r\n        // The page will continue to show this Login page until a user is found & verified.\r\n        handleLogin(null);\r\n        return;\r\n      }\r\n\r\n      // Success\r\n      handleLogin(user.data.isVerified);\r\n    } catch ( err ) {\r\n      console.log(err);\r\n\r\n      // null means that no user is logged in.\r\n      handleLogin(null);\r\n    }\r\n  };\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n      {\r\n        ({handleLogin}) =>\r\n        <div className=\"container-fluid bg-grey full-screen\">\r\n            <div className=\"row\">\r\n                <div className=\"col heading\">\r\n                    <h1>Canada Votes Online</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row bottom\">\r\n                <div className=\"col\">\r\n                  <Form>\r\n                    <Form.Group controlId=\"formBasicUUID\">\r\n                      <Form.Label className=\"entry-field-label\">Username</Form.Label>\r\n                      <Form.Control type=\"text\" value={username} onChange={event => setUsername(event.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                      <Form.Label className=\"entry-field-label\">Password</Form.Label>\r\n                      <Form.Control type=\"password\" value={password} onChange={event => setPassword(event.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <div className=\"right-align-div\">\r\n                      <Button variant=\"secondary\" type=\"submit\" onClick={(event) => {handleFormSubmit(username, password, handleLogin, event)}}>\r\n                        Sign in\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, {useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport \"./style.css\";\r\nimport Landing from './Landing';\r\nimport EditDistrict from './EditDistrict';\r\nimport UserContext from '../utils/UserContext';\r\n\r\nfunction EditDistrictConfirm(props) {\r\n  // console.log(\"EditDistrictConfirm, props is \", props);\r\n  const [user, setUser] = useState(props.user);\r\n  const [activeComponentId, setActiveComponentId] = useState(0); // 0 is render default (this confirmation page) and 1 is go back and edit (edit district), 2 is for landing\r\n  console.log(\"EditDistrictConfirm \", user);\r\n\r\n    const handleFormSubmit = async (handleLogin, event) => {\r\n      try {\r\n        let newUser = await axios.put(`/api/updateAddress/${user._doc.login.username}/${user.streetNo}/${user.address}/${user.city}/${user.province}/${user.postalCode}`);\r\n        console.log(\"EditDistrictConfirm, new user is \", newUser);\r\n        setUser(newUser.data);\r\n        props.user = newUser.data;\r\n        handleLogin(newUser.data);\r\n      } catch ( err ) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    // active component id 1\r\n    const renderEditDistrict = () => {\r\n      return <EditDistrict />;\r\n    };\r\n\r\n    // active component id 2\r\n    const renderHome = () => {\r\n      return <Landing />;\r\n    };\r\n\r\n    // active component id 0\r\n    const renderDefault = (handleLogin) => {\r\n      // console.log(\"EditDistrictConfirm renderDefault user is \", user);\r\n      return (\r\n        <div className=\"container-fluid bg-grey full-screen\">\r\n        <div className=\"row pt-3\">\r\n          <div className=\"col\">\r\n            <h4>Is this correct?</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col bg-white centre-align-div\">\r\n            <p>{user.streetNo} {unescape(user.address)}, {unescape(user.city)}, {unescape(user.province)}, {unescape(user.postalCode)}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row bottom\">\r\n          <div className=\"col\">\r\n            <Button variant=\"secondary w-100\" type=\"button\" \r\n              onClick={ () => { setActiveComponentId(1)}}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n          <div className=\"col\">\r\n            <Button variant=\"secondary w-100\" type=\"submit\" \r\n                onClick={\r\n                () => {\r\n                  handleFormSubmit(handleLogin);\r\n                  setActiveComponentId(2);\r\n                }}>\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    };\r\n\r\n    const renderActiveComponent = (handleLogin) => {\r\n      // console.log(\"EditDistrictConfirm id is \", activeComponentId);\r\n      switch(activeComponentId) {\r\n        case(1): {\r\n          return renderEditDistrict();\r\n        }\r\n\r\n        case(2): {\r\n          return renderHome();\r\n        }\r\n\r\n        case(0):\r\n        default: {\r\n          return renderDefault(handleLogin);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <UserContext.Consumer >\r\n       {\r\n         ({handleLogin}) => {\r\n           return renderActiveComponent(handleLogin)\r\n         }\r\n      }\r\n       </UserContext.Consumer>\r\n      );\r\n}\r\n\r\nexport default EditDistrictConfirm;\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport EditDistrictConfirm from './EditDistrictConfirm';\r\nimport \"./style.css\";\r\n\r\nfunction EditDistrict() {\r\n  const [voter, setVoter] = useState();\r\n  const [streetNo, setStreetNo] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [city, setCity] = useState();\r\n  const [province, setProvince] = useState();\r\n  const [postalCode, setPostalCode] = useState();\r\n  const [activeComponentId, setActiveComponentId] = useState(0); // 0 means render default form, 1 means EditDistrictConfirm\r\n\r\n  const handleFormSubmit = async (event) => {\r\n//    console.log(\"EditDistrict handleFormSubmit\");\r\n    try {\r\n      let eAddress = escape(address);\r\n      let eCity = escape(city);\r\n      // province is already escaped because it's the id of the dropdown field\r\n      voter.streetNo = streetNo;\r\n      voter.address = eAddress;\r\n      voter.city = eCity;\r\n      voter.province = province;\r\n      voter.postalCode = postalCode.replace(/\\s/g, \"\");\r\n      console.log(\"EditDistrict, setting Voter \", voter);\r\n      setVoter(voter);\r\n    } catch( err ) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // active component id 1\r\n  const renderConfirm = () => {\r\n    // console.log(\"renderConfirm, voter is \", voter);\r\n    return <EditDistrictConfirm user={voter}/>\r\n  };\r\n\r\n  // active component id 0\r\n  const renderDefault = () => {\r\n    return (\r\n      <div className=\"container-fluid bg-grey full-screen\">\r\n          <div className=\"row\">\r\n              <div className=\"col\">\r\n                  <h1>Enter your new address</h1>\r\n              </div>\r\n          </div>\r\n          <div className=\"row pb-3\">\r\n            <div className=\"col \">\r\n              <Form>\r\n                  <Form.Group controlId=\"formBasicAddress\">\r\n                    <Form.Label id=\"streetNoLabel\" className=\"entry-field-label\">Street Number</Form.Label>\r\n                    <Form.Control id=\"streetNo\" type=\"number\" onChange={event => setStreetNo(event.target.value)}/>\r\n\r\n                    <Form.Label className=\"entry-field-label\">Address</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={event => setAddress(event.target.value)}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicCity\">\r\n                    <Form.Label className=\"entry-field-label\">City</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={event => setCity(event.target.value)}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPostalcode\">\r\n                    <Form.Label className=\"entry-field-label\">Postal Code</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={event => setPostalCode(event.target.value)}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"provinces\" className=\"right-align-div\">\r\n                    <DropdownButton id=\"provinceDropdown\" title=\"Province/Territory\" variant=\"secondary\">\r\n                      <Dropdown.Item id=\"Alberta\" onClick={(event) => setProvince(event.target.id)}>Alberta</Dropdown.Item>\r\n                      <Dropdown.Item id=\"British%20Columbia\" onClick={(event) => setProvince(event.target.id)}>British Columbia</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Manitoba\" onClick={(event) => setProvince(event.target.id)}>Manitoba</Dropdown.Item>\r\n                      <Dropdown.Item id=\"New%20Brunswick\" onClick={(event) => setProvince(event.target.id)}>New Brunswick</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Newfoundland%20and%20Labrador\" onClick={(event) => setProvince(event.target.id)}>Newfoundland and Labrador</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Northwest%20Territories\" onClick={(event) => setProvince(event.target.id)}>Northwest Territories</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Nova%20 Scotia\" onClick={(event) => setProvince(event.target.id)}>Nova Scotia</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Nunavut\" onClick={(event) => setProvince(event.target.id)}>Nunavut</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Ontario\" onClick={(event) => setProvince(event.target.id)}>Ontario</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Prince%20Edward%20Island\" onClick={(event) => setProvince(event.target.value)}>Prince Edward Island</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Quebec\" onClick={(event) => setProvince(event.target.id)}>Quebec</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Saskatchewan\" onClick={(event) => setProvince(event.target.id)}>Saskatchewan</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Yukon\" onClick={(event) => setProvince(event.target.id)}>Yukon</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formSubmit\" className=\"right-align-div\">\r\n                    <Button variant=\"secondary w-50\" type=\"submit\" \r\n                      onClick={(event) => {\r\n                        handleFormSubmit(event); // save the new address to the database\r\n                        setActiveComponentId(1); // switch to the Edit District Confirm page\r\n                      }}>\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  const renderActiveComponent = () => {\r\n    // console.log(\"renderActiveComponent, id is \", activeComponentId)\r\n    switch(activeComponentId) {\r\n      case(1): {\r\n        return renderConfirm();\r\n      }\r\n\r\n      case(0):\r\n      default: {\r\n        return renderDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n        {\r\n          ({user}) => {\r\n            setVoter(user);\r\n\r\n            return renderActiveComponent();\r\n          }\r\n        }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default EditDistrict;\r\n","import React from 'react';\r\n\r\nfunction LoadingSpinner() {\r\n\r\n    return (\r\n        <div>\r\n            <i className=\"fa fa-spinner fa-spin\" /> Loading...\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Landing from './Landing';\r\nimport ViewCandidates from './ViewCandidates';\r\nimport \"./style.css\";\r\n\r\nfunction Candidate(props) {\r\n    // console.log(\"Candidate \", props);\r\n    const [candidate] = useState(props.candidate);\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 is for candidate details, 1 is for list of candidates, 2 is for Landing\r\n\r\n    const getPartyWebsite = (party_affiliation) => {\r\n        switch(party_affiliation) {\r\n            case('Conservative Party of Canada'): {\r\n                return \"http://www.conservative.ca\";\r\n            }\r\n\r\n            case('Green Party of Canada'): {\r\n                return \"http://greenparty.ca\";\r\n            }\r\n\r\n            case('Liberal Party of Canada'): {\r\n                return \"http://www.liberal.ca\";\r\n            }\r\n\r\n            case(\"New Democratic Party\"): {\r\n                return \"http://www.ndp.ca\";\r\n            }\r\n\r\n            case(\"Bloc Québécois\"): {\r\n                return \"http://blocquebecois.org\";\r\n            }\r\n\r\n            default: {\r\n                console.log(\"party is \", party_affiliation);\r\n                return \"https://www.elections.ca/content.aspx?section=pol&dir=par&document=index&lang=e\"; // indicate no party website by directing them to the general Elections Canada web site listing all of them\r\n            }\r\n        }\r\n    }\r\n\r\n    // Active component Id 0\r\n    const renderCandidateDetails = () => {\r\n        return (\r\n            <div className=\"container-fluid full-screen bg-grey\">\r\n                <div className=\"row\">\r\n                    {/* <div className=\"col text-center\">\r\n                        <Image src={candidate.pictureURL} />\r\n                    </div> */}\r\n                    <div className=\"col\">\r\n                        <h1>{candidate.first_name} {candidate.last_name}</h1>\r\n                        <h5>{candidate.party_affiliation}</h5>\r\n                        <h5>{candidate.district_name}</h5>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <Card className={candidate.party}>\r\n                      <Card.Body>\r\n                        <Card.Title>Contact</Card.Title>\r\n                        <Card.Text><b>Phone:</b> {candidate.phone}</Card.Text>\r\n                        <Card.Text><b>Office Address:</b> {candidate.address}</Card.Text>\r\n                        <Card.Text><b>Email:</b> {candidate.email}</Card.Text>\r\n                        <Card.Text><b>Twitter:</b> <Card.Link href={candidate.twitter}>{candidate.twitter}</Card.Link></Card.Text>\r\n                        <Card.Text><b>Website:</b> <Card.Link href={candidate.website}>{candidate.website}</Card.Link></Card.Text>                      \r\n                      </Card.Body>\r\n                    </Card>\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col centre-align-div\">\r\n                        <h4><a href={getPartyWebsite(candidate.party_affiliation)}>{candidate.party_affiliation}</a></h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col centre-align-div\">\r\n                        <h4><a href=\"https://www.elections.ca/content.aspx?section=pol&dir=par&document=index&lang=e\">Elections Canada Registered Political Parties</a></h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row p-3 bottom\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"secondary w-100\" onClick={ () => { setActiveComponentId(1) }}>View Candidates</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button variant=\"secondary w-100\" onClick={ () => { setActiveComponentId(2) }}>Home</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Active component id 1\r\n    const renderAllCandidates = () => {\r\n        return <ViewCandidates />;\r\n    }\r\n\r\n    // Active component id 2\r\n    const renderHome = () => {\r\n        console.log(\"CandidateDetails going home\");\r\n        return (\r\n          <Landing />\r\n        );\r\n    }    \r\n\r\n    const renderActiveComponent = () => {\r\n        switch (activeComponentId) {\r\n            case(2): {\r\n              return renderHome();\r\n            }\r\n      \r\n            case(1): {\r\n              return renderAllCandidates();\r\n            }\r\n      \r\n            case(0): \r\n            default: {\r\n              return renderCandidateDetails();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        renderActiveComponent()\r\n    );\r\n}\r\n\r\nexport default Candidate;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport Landing from './Landing';\r\nimport CandidateDetails from './CandidateDetails';\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"./style.css\";\r\n\r\nfunction ViewCandidates() {\r\n    const [candidates, setCandidates] = useState([]);\r\n    const [voter, setVoter] = useState(null);\r\n    const [selectedCandidate, setSelectedCandidate] = useState(null); \r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 for Loading, 1 for Landing, 2 for list of candidates\r\n    console.log(\"viewcandidates\");\r\n\r\n    useEffect(() => {\r\n      console.log(\"ViewCandidates useEffect\");\r\n      async function loadCandidates() {\r\n        try {\r\n          if(voter === null) {\r\n            // Not ready to load candidates until we know what district the user is in\r\n            console.log(\"Vote loadCandidates no voter yet\");\r\n            return;\r\n          }\r\n  \r\n          if(activeComponentId === 0) {\r\n            let postcode = voter._doc.location.postcode.replace(/\\s/g, \"\");\r\n            console.log(`/api/candidates/${postcode}`);\r\n            const candidates = await axios.get(`/api/candidates/${postcode}`);\r\n            console.log(\"View Candidates found \", candidates);\r\n            setCandidates(candidates.data.candidateList);\r\n            setActiveComponentId(2);\r\n          }\r\n        }\r\n        catch( err ) {\r\n            console.log(err);\r\n            setCandidates([]);\r\n        }\r\n      }\r\n      loadCandidates();\r\n    }, [voter]);\r\n\r\n    const renderDefault = () => {\r\n      console.log(\"ViewCandidates, candidates are: \", candidates);\r\n      return (\r\n        <div className=\"container-fluid bg-grey\">\r\n          <div className=\"row \">\r\n            {\r\n             candidates.map( (candidate) => {\r\n               console.log(candidate)\r\n               return renderCandidateThumbnail(candidate);\r\n             })\r\n            }\r\n          </div>\r\n          <div className=\"row mt-3 pb-3\">\r\n            <div className=\"col text-right\">\r\n                <Button variant=\"secondary\" onClick={ () => { setActiveComponentId(1) } }>\r\n                Home\r\n                </Button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      );\r\n    }\r\n\r\n    const renderHome = () => {\r\n      console.log(\"CandidateCard going home\");\r\n      return (\r\n        <Landing />\r\n      );\r\n    }\r\n  \r\n    const renderCandidateDetails = (candidate) => {\r\n      return <CandidateDetails candidate={candidate} handleSelectCandidate={setSelectedCandidate}/>\r\n    };\r\n  \r\n    const renderCandidateThumbnail = (candidate) => {\r\n      return (\r\n        <div key={candidate.id} className=\"col-12 col-sm-4 mt-3\">\r\n        <Card className={candidate.party}>         \r\n          {/* <Card.Img variant=\"top\" src={candidate.pictureURL}   /> */}\r\n          <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n          <Card.Text>\r\n          {candidate.party_affiliation}\r\n          </Card.Text>\r\n          <button className=\"btn btn-secondary\" \r\n            onClick={(event) => {\r\n              setSelectedCandidate(candidate);\r\n              setActiveComponentId(3);\r\n            }}>\r\n            View {candidate.first_name} {candidate.last_name}</button>\r\n        </Card>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n      switch(activeComponentId) {\r\n        case(0): {\r\n          return <LoadingSpinner />;\r\n        }\r\n\r\n        case(1): {\r\n          return renderHome();\r\n        }\r\n\r\n        case(3): {\r\n          return renderCandidateDetails(selectedCandidate);\r\n        }\r\n\r\n        case(4): {\r\n          return candidates.map( (candidate) => {\r\n            return renderCandidateThumbnail(candidate);\r\n          });\r\n        }\r\n\r\n        case(2):\r\n        default: {\r\n          return renderDefault();\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n       {\r\n         ({user}) => {\r\n           setVoter(user);\r\n\r\n           return renderActiveComponent();\r\n         }\r\n       }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default ViewCandidates;\r\n","import React from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"./style.css\";\r\n\r\nfunction VoteRow(props) {\r\n  return props.model.map( (candidate, index) => {\r\n    return (\r\n      <InputGroup key={index} className=\"pb-3\">\r\n        <Form.Control plaintext readOnly className=\"bg-white text-right pr-3\" defaultValue={candidate.last_name + \", \" + candidate.first_name + ' / ' + candidate.party_affiliation} />\r\n        <InputGroup.Append>\r\n          <InputGroup.Radio name=\"votingGroup\" aria-label={candidate.last_name + \", \" + candidate.first_name + ' / ' + candidate.party_affiliation} onChange={() => props.handleFormSelect(candidate)}/>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    );\r\n  });\r\n}\r\n\r\nexport default VoteRow;","import React, {useState} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport Landing from \"./Landing\";\r\nimport axios from 'axios';\r\nimport './style.css';\r\n\r\nfunction VoteSubmitted(props) {\r\n    const [candidate] = useState(props.candidate);\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 means the confirmation message, 1 means landing page\r\n    console.log(\"VoteSubmitted props is \", props);\r\n    console.log(\"VoteSubmitted candidate is \", candidate);\r\n\r\n    // Could have done this on the last page (VoteConfirm) ... decisions, decisions ...\r\n    // Tell the server to mark this user as having voted and increment the candidate's # of votes by 1.\r\n    const submitVote = async (user, candidate) => {\r\n      try {\r\n        console.log(`/api/voter/${user.uuid}/${candidate.id}`);\r\n        await axios.put(`/api/voter/${user.uuid}/${candidate.id}`);\r\n      }\r\n      catch( err ) {\r\n        console.log(err);    \r\n      }\r\n    }\r\n\r\n    // active id 1\r\n    const renderHome = () => {\r\n        return <Landing />;\r\n    }\r\n\r\n    // active id 0\r\n    const renderDefault = () => {\r\n        return (\r\n            <div className={\"container-fluid bg-grey full-screen\"} >\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h1>You voted for</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row pb-3\">\r\n                    <div className=\"col\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                        <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n                        <Card.Text>{candidate.party_affiliation}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row pt-3\">\r\n                    <div className=\"col\">\r\n                        <h2>Thank you! Your vote has been registered.</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row bottom\">\r\n                    <div className=\"col right-align-div\">\r\n                        <Button variant=\"secondary w-50\" onClick={() => {setActiveComponentId(1)}}>Home</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n        switch(activeComponentId) {\r\n            case(1): {\r\n                return renderHome();\r\n            }\r\n\r\n            case(0):\r\n            default: {\r\n                return renderDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UserContext.Consumer>\r\n        {  \r\n          ({user}) => {\r\n            submitVote(user, candidate);\r\n            return renderActiveComponent();\r\n          }\r\n        }\r\n        </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default VoteSubmitted;\r\n","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport Vote from \"./Vote\";\r\nimport VoteSubmitted from \"./VoteSubmitted\";\r\nimport \"./style.css\";\r\n\r\nfunction VoteConfirm(props) {\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 is for default, 1 is for edit/go back, 2 is for save/confirm\r\n    const [candidate] = useState(props.candidate);\r\n    console.log(\"VoteConfirm candidate is \", candidate);\r\n\r\n    // Active Component Id 0\r\n    const renderDefault = () => {\r\n      return (\r\n        <div className={\"container-fluid bg-grey full-screen\"}>\r\n            <div className=\"row pb-3\">\r\n                <div className=\"col\">\r\n                    <h1>You are voting for</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row pb-3 text-center\">\r\n                <div className=\"col\">\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n                      <Card.Text>{candidate.party_affiliation}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row pt-3\">\r\n                <div className=\"col\">\r\n                    <h1>Is this correct?</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row bottom\">\r\n                <div className=\"col\">\r\n                    <Button variant=\"secondary w-100\" onClick={() => {setActiveComponentId(1)}}>Edit</Button>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <Button variant=\"secondary w-100\" onClick={() => {setActiveComponentId(2)}}>Confirm</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // active component id 1\r\n    const renderEditVote = () => {\r\n        return <Vote />;\r\n    }\r\n\r\n    // active component id 2\r\n    const renderConfirm = () => {\r\n        return <VoteSubmitted candidate={candidate}/>;\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n        switch(activeComponentId) {\r\n            case(1): {\r\n                return renderEditVote();\r\n            }\r\n\r\n            case(2): {\r\n                return renderConfirm();\r\n            }\r\n\r\n            case(0):\r\n            default: {\r\n                return renderDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n      {\r\n        ({user}) => renderActiveComponent()\r\n      }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default VoteConfirm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport VoteRow from './VoteRow';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport VoteConfirm from './VoteConfirm';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction Vote() {\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [selectedCandidate, setSelectedCandidate] = useState(null);\r\n  const [activeComponentId, setActiveComponentId] = useState(0); // 0 for the loading spinner, 1 for the page listing all of the voting rows, and 2 for vote confirm\r\n  const [voter, setVoter] = useState(null);\r\n\r\n  useEffect( () => {\r\n    // console.log(\"Vote useEffect\");\r\n    async function loadCandidates() {\r\n      try {\r\n        if(voter === null) {\r\n          // Not ready to load candidates until we know what district the user is in\r\n          // console.log(\"Vote loadCandidates no voter yet\");\r\n          return;\r\n        }\r\n  \r\n        if(activeComponentId === 0) {\r\n          // console.log(\"Vote loadCandidates voter is \", voter);\r\n          console.log(voter._doc);\r\n          let postcode = voter._doc.location.postcode.replace(/\\s/g, \"\");\r\n          console.log(`Vote loadCandidates with /api/candidates/${postcode}`);\r\n          const candidates = await axios.get(`/api/candidates/${postcode}`);\r\n          console.log(\"Vote loadCandidates after \", candidates.data);\r\n          setCandidates(candidates.data.candidateList);\r\n          setActiveComponentId(2);\r\n        }\r\n      }\r\n      catch( err ) {\r\n          console.log(err);\r\n          setCandidates([]);\r\n      }\r\n    };\r\n    loadCandidates();  \r\n  }, [voter]);\r\n\r\n\r\n  const handleFormSelect = async (candidate) => {\r\n    console.log(\"Vote, candidate selected, candidate is \", candidate);\r\n    setSelectedCandidate(candidate);\r\n  };\r\n\r\n  // Active Component Id 0\r\n  const renderLoading = () => {\r\n    return <LoadingSpinner />;\r\n  };\r\n\r\n  // Active Component Id 1\r\n  const renderDefault = () => {\r\n    // console.log(\"Vote renderDefault \", candidates);\r\n    return  (\r\n      <div className=\"container-fluid bg-grey full-screen\">\r\n        <div className=\"row pt-3\">\r\n          <div className=\"col\">\r\n            <h1>Vote in District {voter._doc.location.district}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row pt-3 pb-3\">\r\n            <div className=\"col\">\r\n                <VoteRow\r\n                  model={candidates}\r\n                  handleFormSelect={handleFormSelect}\r\n                />\r\n            </div>\r\n        </div>\r\n        <div className=\"row bottom\">\r\n            <div className=\"col right-align-div\">\r\n              <Button variant=\"secondary w-50\" type=\"submit\" onClick={\r\n                () => { setActiveComponentId(1) }} disabled={selectedCandidate===null}>\r\n                Vote\r\n              </Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\n  // Active Component Id 2\r\n  const renderVoteConfirm = () => {\r\n    return <VoteConfirm candidate={selectedCandidate} />\r\n  };\r\n\r\n  const renderActiveComponent = () => {\r\n    switch(activeComponentId) {\r\n      case(0): {\r\n        return renderLoading();\r\n      }\r\n\r\n      case(1): {\r\n        return renderVoteConfirm();\r\n      }\r\n\r\n      case(2):\r\n      default: {\r\n        return renderDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Consumer>\r\n    {\r\n      ({user}) => {\r\n        // console.log(\"Vote in render. user is \", user);\r\n        setVoter(user);\r\n        // console.log(\"Vote in render. voter is \", voter);\r\n        // console.log(\"Vote in render. candidates are \", candidates);\r\n        // console.log(\"Vote in render, loading is \", loading);\r\n        return renderActiveComponent();\r\n      }\r\n    }\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Vote;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport EditDistrict from \"./EditDistrict\";\r\nimport ViewCandidates from './ViewCandidates';\r\nimport Vote from './Vote';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Landing() {\r\n    // console.log(\"Landing\");\r\n    const [voter, setVoter] = useState(null);\r\n    const [activeComponentId, setActiveComponentId] = useState(1); // 0 is render default, 1 is LoadingSpinner, 2 is edit district, 3 is View Candidates, 4 is Vote\r\n\r\n    useEffect(() => {\r\n        // console.log(\"useEffect\");\r\n        setActiveComponentId(0);\r\n        // console.log(subcomponent);\r\n    }, [voter]);\r\n\r\n    // active component id 0\r\n    function renderDefault() {\r\n        // console.log(\"renderDefault\");\r\n        if(voter == null) {\r\n            // Not ready to render yet\r\n            // console.log(\"voter is null, returning\");\r\n            return;\r\n        }\r\n        console.log(\"Landing renderDefault, voter is \", voter);\r\n\r\n\r\n        setActiveComponentId(0);\r\n        return (\r\n            <div className=\"container-fluid bg-map full-screen\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8 col-sm-9 mt-3 ml-3 bg-white text-center pt-2\">\r\n                       Your district is {voter._doc.location.district}\r\n                    </div>\r\n                    <div className=\"col-3 col-sm-2 mt-3\">\r\n                      <Button variant=\"secondary w-100\" \r\n                              onClick={ () => { setActiveComponentId(2) }}>\r\n                         Edit</Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row pb-3 bottom\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"secondary w-100\" \r\n                            onClick={ () => { setActiveComponentId(3) }}>\r\n                            View Candidates</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button variant=\"secondary w-100\"\r\n                            onClick={ () => { setActiveComponentId(4) }}>\r\n                            Vote</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // active component 1\r\n    const renderLoading = () => {\r\n        return <LoadingSpinner />;\r\n    };\r\n\r\n    // active component 2\r\n    const renderEditDistrict = () => {\r\n        return <EditDistrict />;\r\n    };\r\n\r\n    // active component 3\r\n    const renderViewCandidates = () => {\r\n        return <ViewCandidates />;\r\n    }\r\n\r\n    // active component 4\r\n    const renderVote = () => {\r\n        return <Vote />;\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n        switch(activeComponentId) {\r\n            case(4): {\r\n                return renderVote();\r\n            }\r\n\r\n            case(3): {\r\n                return renderViewCandidates();\r\n            }\r\n\r\n            case(2): {\r\n                return renderEditDistrict();\r\n            }\r\n\r\n            case(1): {\r\n                return renderLoading();\r\n            }\r\n\r\n            case(0):\r\n            default: {\r\n                return renderDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n      {\r\n          ({user}) => {\r\n            // Can't set this on function load because we need to know \r\n            // the user's data.\r\n            setVoter(user);\r\n            return renderActiveComponent();\r\n          }\r\n      }\r\n      </UserContext.Consumer>  \r\n\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useState } from 'react';\r\nimport Login from \"./components/Login\";\r\nimport Landing from \"./components/Landing\";\r\nimport UserContext from './utils/UserContext';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState( null );\r\n//  const [user, setUser] = useState( { name: \"A. Smith\", uuid: 1, district: \"W01\", city: \"Toronto\", province: \"Ontario\", address: \"1 Anywhere St\"}); // FOR TESTING\r\n\r\n  let component = null;\r\n  if(user != null) {\r\n    component = <Landing />\r\n  } else {\r\n    component = <Login />\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={ {\r\n      user: user,\r\n      handleLogin: (newUser) => {console.log(\"App Context \", newUser); setUser(newUser)}\r\n    } }>\r\n      { component }\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}