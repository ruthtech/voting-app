{"version":3,"sources":["components/assets/media/canada-flag.svg","utils/UserContext.js","components/Login.js","components/EditDistrictConfirm.js","components/EditDistrict.js","components/LoadingSpinner.js","components/CandidateDetails.js","components/ViewCandidates.js","components/VoteRow.js","components/VoteSubmitted.js","components/VoteConfirm.js","components/Vote.js","components/Landing.js","App.js","index.js"],"names":["module","exports","React","createContext","Login","useState","username","setUsername","password","setPassword","UserContext","Consumer","handleLogin","className","Image","src","CanadaFlag","alt","Form","Group","controlId","Label","Control","type","value","onChange","event","target","Button","variant","onClick","a","async","preventDefault","encodeURI","query","axios","get","user","data","isVerified","console","log","handleFormSubmit","EditDistrictConfirm","props","location","setLocation","activeComponentId","setActiveComponentId","renderDefault","streetNo","streetName","city","province","postcode","put","newUser","renderActiveComponent","EditDistrict","state","replace","newLocation","setState","renderBack","renderConfirm","voter","context","_doc","login","id","DropdownButton","title","Dropdown","Item","this","Component","contextType","LoadingSpinner","Candidate","candidate","getPartyWebsite","party_affiliation","first_name","last_name","district_name","href","ViewCandidates","candidates","setCandidates","setVoter","selectedCandidate","setSelectedCandidate","useEffect","candidateList","loadCandidates","renderCandidateThumbnail","key","Card","party","Title","Text","CandidateDetails","handleSelectCandidate","map","VoteRow","model","index","InputGroup","plaintext","readOnly","defaultValue","Append","Radio","name","aria-label","handleFormSelect","VoteSubmitted","Body","uuid","submitVote","VoteConfirm","Vote","district","disabled","mapboxgl","accessToken","Landing","ref","el","mapContainer","renderEditDistrict","street","number","renderViewCandidates","renderVote","voterLatitude","coordinates","latitude","voterLongitude","longitude","newMap","Map","container","style","center","zoom","setCenter","App","setUser","component","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41adc49a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/canada-flag.dea429e4.svg\";","import React from 'react';\r\n\r\nexport default React.createContext();\r\n","// import React from 'react';\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport CanadaFlag from './assets/media/canada-flag.svg';\r\nimport \"./style.css\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleFormSubmit = async (username, password, handleLogin, event) => {\r\n    try {\r\n      event.preventDefault();\r\n      username = encodeURI(username);\r\n\r\n      let query = `/api/login/${username}/${password}`;\r\n      const user = await axios.get(query);\r\n      if(!user.data.isVerified) {\r\n        // Either the UUID was not found or the password is incorrect.\r\n        // The page will continue to show this Login page until a user is found & verified.\r\n        handleLogin(null);\r\n        return;\r\n      }\r\n\r\n      // Success\r\n      handleLogin(user.data.isVerified);\r\n    } catch ( err ) {\r\n      console.log(err);\r\n\r\n      // null means that no user is logged in.\r\n      handleLogin(null);\r\n    }\r\n  };\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n      {\r\n        ({handleLogin}) =>\r\n        <div className=\"container-fluid bg-almostWhite full-screen\">\r\n            <div className=\"row flag-block \">\r\n              <Image className=\"bg-white\" src={CanadaFlag} alt=\"Canada Flag\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col heading\">\r\n                    <h1>Canada Votes Online</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row bottom-page\">\r\n                <div className=\"col\">\r\n                  <Form>\r\n                    <Form.Group controlId=\"formBasicUUID\">\r\n                      <Form.Label className=\"entry-field-label\">Username</Form.Label>\r\n                      <Form.Control type=\"text\" value={username} onChange={event => setUsername(event.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                      <Form.Label className=\"entry-field-label\">Password</Form.Label>\r\n                      <Form.Control type=\"password\" value={password} onChange={event => setPassword(event.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <div className=\"right-align-div\">\r\n                      <Button variant=\"secondary\" type=\"submit\" onClick={(event) => {handleFormSubmit(username, password, handleLogin, event)}}>\r\n                        Sign in\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, {useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport \"./style.css\";\r\nimport Landing from './Landing';\r\nimport EditDistrict from './EditDistrict';\r\nimport UserContext from '../utils/UserContext';\r\n\r\nfunction EditDistrictConfirm(props) {\r\n  const [location, setLocation] = useState(props.location);\r\n  const [username] = useState(props.username);\r\n  const [activeComponentId, setActiveComponentId] = useState(0); // 0 is render default (this confirmation page) and 1 is go back and edit (edit district), 2 is for landing\r\n\r\n    const handleFormSubmit = async (handleLogin) => {\r\n      try {\r\n        let newUser = await axios.put(`/api/updateAddress/${encodeURI(username)}/${encodeURI(location.streetNo)}/${encodeURI(location.streetName)}/${encodeURI(location.city)}/${encodeURI(location.province)}/${encodeURI(location.postcode)}`);\r\n        \r\n        setLocation(newUser.data); // Update this UI page with the new address. (If the address was invalid then the closest match was returned.)\r\n\r\n        handleLogin(newUser.data); // Update the user in the context.\r\n\r\n      } catch ( err ) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    // active component id 1\r\n    const renderEditDistrict = () => {\r\n      console.log(\"location is \", location);\r\n      return <EditDistrict location={location}/>;\r\n    };\r\n\r\n    // active component id 2\r\n    const renderHome = () => {\r\n      return <Landing />;\r\n    };\r\n\r\n    // active component id 0\r\n    const renderDefault = (handleLogin) => {\r\n      return (\r\n        <div className=\"container-fluid bg-almostWhite full-screen\">\r\n        <div className=\"row pt-3\">\r\n          <div className=\"col\">\r\n            <h4>Is this correct?</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h6>If there were any problems locating the address that you entered, the closest address is displayed below.</h6>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col bg-white centre-align-div\">\r\n            <p>{location.streetNo} {location.streetName}, {location.city}, {location.province}, {location.postcode}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <Button variant=\"secondary w-100\" type=\"button\" \r\n              onClick={ () => { setActiveComponentId(1)}}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n          <div className=\"col\">\r\n            <Button variant=\"secondary w-100\" type=\"submit\" \r\n                onClick={\r\n                () => {\r\n                  handleFormSubmit(handleLogin);\r\n                  setActiveComponentId(2);\r\n                }}>\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    };\r\n\r\n    const renderActiveComponent = (handleLogin) => {\r\n      switch(activeComponentId) {\r\n        case(1): {\r\n          return renderEditDistrict();\r\n        }\r\n\r\n        case(2): {\r\n          return renderHome();\r\n        }\r\n\r\n        case(0):\r\n        default: {\r\n          return renderDefault(handleLogin);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <UserContext.Consumer >\r\n       {\r\n         ({handleLogin}) => {\r\n           return renderActiveComponent(handleLogin)\r\n         }\r\n      }\r\n       </UserContext.Consumer>\r\n      );\r\n}\r\n\r\nexport default EditDistrictConfirm;\r\n","import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport EditDistrictConfirm from './EditDistrictConfirm';\r\nimport Landing from './Landing';\r\nimport \"./style.css\";\r\n\r\nclass EditDistrict extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  // Location data is not escaped until right before it is sent to axios. \r\n  // Sending in location instead of user/voter because the query to the server to find out if the address exists isn't associated with a user. \r\n  state = {\r\n    location: this.props.location,\r\n    activeComponentId: 0 // 0 means render default form, 1 means EditDistrictConfirm\r\n  }\r\n\r\n  handleFormSubmit = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      // Check if the address is valid or not. If it's not, replace it with the nearest valid address.\r\n      // escape is deprecated and doesn't work on the Quebec city names with accents. Use encodeURI instead.\r\n      console.log(`EditDistrict about to call /api/address/${encodeURI(this.state.location.streetNo)}/${encodeURI(this.state.location.streetName)}/${encodeURI(this.state.location.city)}/${encodeURI(this.state.location.province)}/${encodeURI(this.state.location.postcode.replace(/\\s/g, \"\"))}`);\r\n      let newLocation = await axios.get(`/api/address/${encodeURI(this.state.location.streetNo)}/${encodeURI(this.state.location.streetName)}/${encodeURI(this.state.location.city)}/${encodeURI(this.state.location.province)}/${encodeURI(this.state.location.postcode.replace(/\\s/g, \"\"))}`);\r\n      console.log(\"EditDistrict, newLocation is \", newLocation.data);\r\n      this.setState({ location: newLocation.data });\r\n    } catch( err ) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // active component id 2\r\n  renderBack = () => {\r\n    return <Landing />;\r\n  };\r\n\r\n  // active component id 1\r\n  renderConfirm = () => {\r\n    let voter = this.context.user;\r\n    console.log(\"EditDistrict about to confirm, location is \", this.state.location);\r\n    return <EditDistrictConfirm location={this.state.location} username={voter._doc.login.username}/>\r\n  };\r\n\r\n  // active component id 0\r\n  renderDefault = () => {\r\n    console.log(\"EditDistrict rendering page, location is \", this.state.location);\r\n    return (\r\n      <div className=\"container-fluid bg-almostWhite full-screen\">\r\n          <div className=\"row\">\r\n              <div className=\"col\">\r\n                  <h1>Enter your new address</h1>\r\n              </div>\r\n          </div>\r\n          <div className=\"row pb-3\">\r\n            <div className=\"col \">\r\n              <Form>\r\n                  <Form.Group id=\"formBasicAddress\">\r\n                    <Form.Label id=\"streetNoLabel\" className=\"entry-field-label\">Street Number</Form.Label>\r\n                    <Form.Control id=\"streetNo\" type=\"number\" value={this.state.location.streetNo} onChange={event => this.setState({ location: {...this.state.location, streetNo:event.target.value}})} />\r\n\r\n                    <Form.Label className=\"entry-field-label\">Address</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.state.location.streetName} onChange={event => this.setState({ location: {...this.state.location, streetName:event.target.value}})}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"formBasicCity\">\r\n                    <Form.Label className=\"entry-field-label\">City</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.state.location.city} onChange={event => this.setState({ location: {...this.state.location, city:event.target.value}})}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"formBasicPostalcode\">\r\n                    <Form.Label className=\"entry-field-label\">Postal Code</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.state.location.postcode} onChange={event => this.setState({ location: {...this.state.location, postcode:event.target.value}})}/>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group value={this.state.location.province} className=\"right-align-div\">\r\n                    <DropdownButton id=\"provinceDropdown\" title=\"Province/Territory\" variant=\"secondary\">\r\n                      <Dropdown.Item id=\"Alberta\" onClick={() => {this.setState({ location: {...this.state.location, province:'Alberta'}}); console.log(\"Setting to Alberta, hopefully. What is the retrieved value? \", this.state.location);}}>Alberta</Dropdown.Item>\r\n                      <Dropdown.Item id=\"BritishColumbia\" onClick={() => this.setState({ location: {...this.state.location, province:'British Columbia'}})}>British Columbia</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Manitoba\" onClick={() => this.setState({ location: {...this.state.location, province:'Manitoba'}})}>Manitoba</Dropdown.Item>\r\n                      <Dropdown.Item id=\"NewBrunswick\" onClick={() => this.setState({ location: {...this.state.location, province:'New Brunswick'}})}>New Brunswick</Dropdown.Item>\r\n                      <Dropdown.Item id=\"NewfoundlandandLabrador\" onClick={() => this.setState({ location: {...this.state.location, province:'Newfoundland and Labrador'}})}>Newfoundland and Labrador</Dropdown.Item>\r\n                      <Dropdown.Item id=\"NorthwestTerritories\" onClick={() => this.setState({ location: {...this.state.location, province:'Northwest Territories'}})}>Northwest Territories</Dropdown.Item>\r\n                      <Dropdown.Item id=\"NovaScotia\" onClick={() => this.setState({ location: {...this.state.location, province:'Nova Scotia'}})}>Nova Scotia</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Nunavut\" onClick={() => this.setState({ location: {...this.state.location, province:'Nunavut'}})}>Nunavut</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Ontario\" onClick={() => this.setState({ location: {...this.state.location, province:'Ontario'}})}>Ontario</Dropdown.Item>\r\n                      <Dropdown.Item id=\"PrinceEdwardIsland\" onClick={() => this.setState({ location: {...this.state.location, province:'Prince Edward Island'}})}>Prince Edward Island</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Quebec\" onClick={() => this.setState({ location: {...this.state.location, province:'Quebec'}})}>Quebec</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Saskatchewan\" onClick={() => this.setState({ location: {...this.state.location, province:'Saskatchewan'}})}>Saskatchewan</Dropdown.Item>\r\n                      <Dropdown.Item id=\"Yukon\" onClick={() => this.setState({ location: {...this.state.location, province:'Yukon'}})}>Yukon</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formSubmit\" className=\"centre-align-div\">\r\n                    <Button variant=\"secondary w-50 mr-3\" type=\"button\" \r\n                      onClick={ () => { this.state.activeComponentId = 2 } }>\r\n                      Back\r\n                    </Button>\r\n                    <Button variant=\"secondary w-50 ml-3\" type=\"submit\" \r\n                      onClick={(event) => {\r\n                        this.handleFormSubmit(event); // Check that the address exists and send it, or the closest matching existing address, to the confirmation page.\r\n                        this.state.activeComponentId = 1; // switch to the Edit District Confirm page\r\n                      }}>\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  renderActiveComponent = () => {\r\n    switch(this.state.activeComponentId) {\r\n      case(2): {\r\n        return this.renderBack();\r\n      }\r\n\r\n      case(1): {\r\n        return this.renderConfirm();\r\n      }\r\n\r\n      case(0):\r\n      default: {\r\n        return this.renderDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.renderActiveComponent();\r\n  }\r\n}\r\nEditDistrict.contextType = UserContext;\r\n\r\nexport default EditDistrict;\r\n","import React from 'react';\r\n\r\nfunction LoadingSpinner() {\r\n\r\n    return (\r\n        <div>\r\n            <i className=\"fa fa-spinner fa-spin\" /> Loading...\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Landing from './Landing';\r\nimport ViewCandidates from './ViewCandidates';\r\nimport \"./style.css\";\r\n\r\nfunction Candidate(props) {\r\n    // console.log(\"Candidate \", props);\r\n    const [candidate] = useState(props.candidate);\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 is for candidate details, 1 is for list of candidates, 2 is for Landing\r\n\r\n    const getPartyWebsite = (party_affiliation) => {\r\n        switch(party_affiliation) {\r\n            case('Conservative Party of Canada'): {\r\n                return \"http://www.conservative.ca\";\r\n            }\r\n\r\n            case('Green Party of Canada'): {\r\n                return \"http://greenparty.ca\";\r\n            }\r\n\r\n            case('Liberal Party of Canada'): {\r\n                return \"http://www.liberal.ca\";\r\n            }\r\n\r\n            case(\"New Democratic Party\"): {\r\n                return \"http://www.ndp.ca\";\r\n            }\r\n\r\n            case(\"Bloc Québécois\"): {\r\n                return \"http://blocquebecois.org\";\r\n            }\r\n\r\n            default: {\r\n                return \"https://www.elections.ca/content.aspx?section=pol&dir=par&document=index&lang=e\"; // indicate no party website by directing them to the general Elections Canada web site listing all of them\r\n            }\r\n        }\r\n    }\r\n\r\n    // Active component Id 0\r\n    const renderCandidateDetails = () => {\r\n        return (\r\n            <div className=\"container-fluid full-screen bg-almostWhite\">\r\n                <div className=\"row\">\r\n                    {/* <div className=\"col text-center\">\r\n                        <Image src={candidate.pictureURL} />\r\n                    </div> */}\r\n                    <div className=\"col\">\r\n                        <h1>{candidate.first_name} {candidate.last_name}</h1>\r\n                        <h5>{candidate.party_affiliation}</h5>\r\n                        <h5>{candidate.district_name}</h5>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <Card className={candidate.party}>\r\n                      <Card.Body>\r\n                        <Card.Title>Contact</Card.Title>\r\n                        <Card.Text><b>Phone:</b> {candidate.phone}</Card.Text>\r\n                        <Card.Text><b>Office Address:</b> {candidate.address}</Card.Text>\r\n                        <Card.Text><b>Email:</b> {candidate.email}</Card.Text>\r\n                        <Card.Text><b>Twitter:</b> <Card.Link href={candidate.twitter}>{candidate.twitter}</Card.Link></Card.Text>\r\n                        <Card.Text><b>Website:</b> <Card.Link href={candidate.website}>{candidate.website}</Card.Link></Card.Text>                      \r\n                      </Card.Body>\r\n                    </Card>\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col centre-align-div\">\r\n                        <h4><a href={getPartyWebsite(candidate.party_affiliation)}>{candidate.party_affiliation}</a></h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col centre-align-div\">\r\n                        <h4><a href=\"https://www.elections.ca/content.aspx?section=pol&dir=par&document=index&lang=e\">Elections Canada Registered Political Parties</a></h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row p-3\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"secondary w-100\" onClick={ () => { setActiveComponentId(1) }}>View Candidates</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button variant=\"secondary w-100\" onClick={ () => { setActiveComponentId(2) }}>Home</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Active component id 1\r\n    const renderAllCandidates = () => {\r\n        return <ViewCandidates />;\r\n    }\r\n\r\n    // Active component id 2\r\n    const renderHome = () => {\r\n        return (\r\n          <Landing />\r\n        );\r\n    }    \r\n\r\n    const renderActiveComponent = () => {\r\n        switch (activeComponentId) {\r\n            case(2): {\r\n              return renderHome();\r\n            }\r\n      \r\n            case(1): {\r\n              return renderAllCandidates();\r\n            }\r\n      \r\n            case(0): \r\n            default: {\r\n              return renderCandidateDetails();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        renderActiveComponent()\r\n    );\r\n}\r\n\r\nexport default Candidate;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport Landing from './Landing';\r\nimport CandidateDetails from './CandidateDetails';\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"./style.css\";\r\n\r\nfunction ViewCandidates() {\r\n    const [candidates, setCandidates] = useState([]);\r\n    const [voter, setVoter] = useState(null);\r\n    const [selectedCandidate, setSelectedCandidate] = useState(null); \r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 for Loading, 1 for Landing, 2 for list of candidates\r\n\r\n    useEffect(() => {\r\n      async function loadCandidates() {\r\n        try {\r\n          if(voter === null) {\r\n            // Not ready to load candidates until we know what district the user is in\r\n            // console.log(\"Vote loadCandidates no voter yet\");\r\n            return;\r\n          }\r\n  \r\n          if(activeComponentId === 0) {\r\n            let postcode = voter._doc.location.postcode.replace(/\\s/g, \"\");\r\n            // console.log(`/api/candidates/${postcode}`);\r\n            const candidates = await axios.get(`/api/candidates/${postcode}`);\r\n            // console.log(\"View Candidates found \", candidates);\r\n            setCandidates(candidates.data.candidateList);\r\n            setActiveComponentId(2);\r\n          }\r\n        }\r\n        catch( err ) {\r\n            console.log(err);\r\n            setCandidates([]);\r\n        }\r\n      }\r\n      loadCandidates();\r\n    }, [voter]);\r\n\r\n    const renderDefault = () => {\r\n      return (\r\n        <div className=\"container-fluid bg-almostWhite\">\r\n          <div className=\"row \">\r\n            {\r\n             candidates.map( (candidate) => {\r\n              //  console.log(candidate)\r\n               return renderCandidateThumbnail(candidate);\r\n             })\r\n            }\r\n          </div>\r\n          <div className=\"row mt-3 pb-3\">\r\n            <div className=\"col text-right\">\r\n                <Button variant=\"secondary\" onClick={ () => { setActiveComponentId(1) } }>\r\n                Home\r\n                </Button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      );\r\n    }\r\n\r\n    const renderHome = () => {\r\n      // console.log(\"CandidateCard going home\");\r\n      return (\r\n        <Landing />\r\n      );\r\n    }\r\n  \r\n    const renderCandidateDetails = (candidate) => {\r\n      return <CandidateDetails candidate={candidate} handleSelectCandidate={setSelectedCandidate}/>\r\n    };\r\n  \r\n    const renderCandidateThumbnail = (candidate) => {\r\n      return (\r\n        <div key={candidate.id} className=\"col-12 col-sm-4 mt-3\">\r\n        <Card className={candidate.party}>         \r\n          {/* <Card.Img variant=\"top\" src={candidate.pictureURL}   /> */}\r\n          <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n          <Card.Text>\r\n          {candidate.party_affiliation}\r\n          </Card.Text>\r\n          <button className=\"btn btn-secondary\" \r\n            onClick={(event) => {\r\n              setSelectedCandidate(candidate);\r\n              setActiveComponentId(3);\r\n            }}>\r\n            View {candidate.first_name} {candidate.last_name}</button>\r\n        </Card>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n      switch(activeComponentId) {\r\n        case(0): {\r\n          return <LoadingSpinner />;\r\n        }\r\n\r\n        case(1): {\r\n          return renderHome();\r\n        }\r\n\r\n        case(3): {\r\n          return renderCandidateDetails(selectedCandidate);\r\n        }\r\n\r\n        case(4): {\r\n          return candidates.map( (candidate) => {\r\n            return renderCandidateThumbnail(candidate);\r\n          });\r\n        }\r\n\r\n        case(2):\r\n        default: {\r\n          return renderDefault();\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n       {\r\n         ({user}) => {\r\n           setVoter(user);\r\n\r\n           return renderActiveComponent();\r\n         }\r\n       }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default ViewCandidates;\r\n","import React from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"./style.css\";\r\n\r\nfunction VoteRow(props) {\r\n  return props.model.map( (candidate, index) => {\r\n    return (\r\n      <InputGroup key={index} className=\"pb-3\">\r\n        <Form.Control plaintext readOnly className=\"bg-white text-right pr-3\" defaultValue={candidate.last_name + \", \" + candidate.first_name + ' / ' + candidate.party_affiliation} />\r\n        <InputGroup.Append>\r\n          <InputGroup.Radio name=\"votingGroup\" aria-label={candidate.last_name + \", \" + candidate.first_name + ' / ' + candidate.party_affiliation} onChange={() => props.handleFormSelect(candidate)}/>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    );\r\n  });\r\n}\r\n\r\nexport default VoteRow;","import React, {useState} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport Landing from \"./Landing\";\r\nimport axios from 'axios';\r\nimport './style.css';\r\n\r\nfunction VoteSubmitted(props) {\r\n    const [candidate] = useState(props.candidate);\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 means the confirmation message, 1 means landing page\r\n\r\n    // Could have done this on the last page (VoteConfirm) ... decisions, decisions ...\r\n    // Tell the server to mark this user as having voted and increment the candidate's # of votes by 1.\r\n    const submitVote = async (user, candidate) => {\r\n      try {\r\n        await axios.put(`/api/voter/${user.uuid}/${candidate.id}`);\r\n      }\r\n      catch( err ) {\r\n        console.log(err);    \r\n      }\r\n    }\r\n\r\n    // active id 1\r\n    const renderHome = () => {\r\n        return <Landing />;\r\n    }\r\n\r\n    // active id 0\r\n    const renderDefault = () => {\r\n        return (\r\n            <div className={\"container-fluid bg-almostWhite full-screen\"} >\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h1>You voted for</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row pb-3\">\r\n                    <div className=\"col\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                        <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n                        <Card.Text>{candidate.party_affiliation}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row pt-3\">\r\n                    <div className=\"col\">\r\n                        <h2>Thank you! Your vote has been registered.</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col right-align-div\">\r\n                        <Button variant=\"secondary w-50\" onClick={() => {setActiveComponentId(1)}}>Home</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n        switch(activeComponentId) {\r\n            case(1): {\r\n                return renderHome();\r\n            }\r\n\r\n            case(0):\r\n            default: {\r\n                return renderDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UserContext.Consumer>\r\n        {  \r\n          ({user}) => {\r\n            submitVote(user, candidate);\r\n            return renderActiveComponent();\r\n          }\r\n        }\r\n        </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default VoteSubmitted;\r\n","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport UserContext from '../utils/UserContext';\r\nimport Vote from \"./Vote\";\r\nimport VoteSubmitted from \"./VoteSubmitted\";\r\nimport \"./style.css\";\r\n\r\nfunction VoteConfirm(props) {\r\n    const [activeComponentId, setActiveComponentId] = useState(0); // 0 is for default, 1 is for edit/go back, 2 is for save/confirm\r\n    const [candidate] = useState(props.candidate);\r\n\r\n    // Active Component Id 0\r\n    const renderDefault = () => {\r\n      return (\r\n        <div className={\"container-fluid bg-almostWhite full-screen\"}>\r\n            <div className=\"row pb-3\">\r\n                <div className=\"col\">\r\n                    <h1>You are voting for</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row pb-3 text-center\">\r\n                <div className=\"col\">\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Card.Title>{candidate.first_name} {candidate.last_name}</Card.Title>\r\n                      <Card.Text>{candidate.party_affiliation}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row pt-3\">\r\n                <div className=\"col\">\r\n                    <h1>Is this correct?</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Button variant=\"secondary w-100\" onClick={() => {setActiveComponentId(1)}}>Edit</Button>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <Button variant=\"secondary w-100\" onClick={() => {setActiveComponentId(2)}}>Confirm</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // active component id 1\r\n    const renderEditVote = () => {\r\n        return <Vote />;\r\n    }\r\n\r\n    // active component id 2\r\n    const renderConfirm = () => {\r\n        return <VoteSubmitted candidate={candidate}/>;\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n        switch(activeComponentId) {\r\n            case(1): {\r\n                return renderEditVote();\r\n            }\r\n\r\n            case(2): {\r\n                return renderConfirm();\r\n            }\r\n\r\n            case(0):\r\n            default: {\r\n                return renderDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n      <UserContext.Consumer>\r\n      {\r\n        ({user}) => renderActiveComponent()\r\n      }\r\n      </UserContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default VoteConfirm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport VoteRow from './VoteRow';\r\nimport axios from 'axios';\r\nimport UserContext from '../utils/UserContext';\r\nimport VoteConfirm from './VoteConfirm';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction Vote() {\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [selectedCandidate, setSelectedCandidate] = useState(null);\r\n  const [activeComponentId, setActiveComponentId] = useState(0); // 0 for the loading spinner, 1 for the page listing all of the voting rows, and 2 for vote confirm\r\n  const [voter, setVoter] = useState(null);\r\n\r\n  useEffect( () => {\r\n    // console.log(\"Vote useEffect\");\r\n    async function loadCandidates() {\r\n      try {\r\n        if(voter === null) {\r\n          // Not ready to load candidates until we know what district the user is in\r\n          // console.log(\"Vote loadCandidates no voter yet\");\r\n          return;\r\n        }\r\n  \r\n        if(activeComponentId === 0) {\r\n          // console.log(\"Vote loadCandidates voter is \", voter);\r\n          console.log(voter._doc);\r\n          let postcode = voter._doc.location.postcode.replace(/\\s/g, \"\");\r\n          console.log(`Vote loadCandidates with /api/candidates/${postcode}`);\r\n          const candidates = await axios.get(`/api/candidates/${postcode}`);\r\n          console.log(\"Vote loadCandidates after \", candidates.data);\r\n          setCandidates(candidates.data.candidateList);\r\n          setActiveComponentId(2);\r\n        }\r\n      }\r\n      catch( err ) {\r\n          console.log(err);\r\n          setCandidates([]);\r\n      }\r\n    };\r\n    loadCandidates();  \r\n  }, [voter]);\r\n\r\n\r\n  const handleFormSelect = async (candidate) => {\r\n    console.log(\"Vote, candidate selected, candidate is \", candidate);\r\n    setSelectedCandidate(candidate);\r\n  };\r\n\r\n  // Active Component Id 0\r\n  const renderLoading = () => {\r\n    return <LoadingSpinner />;\r\n  };\r\n\r\n  // Active Component Id 1\r\n  const renderDefault = () => {\r\n    // console.log(\"Vote renderDefault \", candidates);\r\n    return  (\r\n      <div className=\"container-fluid bg-almostWhite full-screen\">\r\n        <div className=\"row pt-3\">\r\n          <div className=\"col\">\r\n            <h1>Vote in District {voter._doc.location.district}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row pt-3 pb-3\">\r\n            <div className=\"col\">\r\n                <VoteRow\r\n                  model={candidates}\r\n                  handleFormSelect={handleFormSelect}\r\n                />\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col right-align-div\">\r\n              <Button variant=\"secondary w-50\" type=\"submit\" onClick={\r\n                () => { setActiveComponentId(1) }} disabled={selectedCandidate===null}>\r\n                Vote\r\n              </Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\n  // Active Component Id 2\r\n  const renderVoteConfirm = () => {\r\n    return <VoteConfirm candidate={selectedCandidate} />\r\n  };\r\n\r\n  const renderActiveComponent = () => {\r\n    switch(activeComponentId) {\r\n      case(0): {\r\n        return renderLoading();\r\n      }\r\n\r\n      case(1): {\r\n        return renderVoteConfirm();\r\n      }\r\n\r\n      case(2):\r\n      default: {\r\n        return renderDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Consumer>\r\n    {\r\n      ({user}) => {\r\n        // console.log(\"Vote in render. user is \", user);\r\n        setVoter(user);\r\n        // console.log(\"Vote in render. voter is \", voter);\r\n        // console.log(\"Vote in render. candidates are \", candidates);\r\n        // console.log(\"Vote in render, loading is \", loading);\r\n        return renderActiveComponent();\r\n      }\r\n    }\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Vote;\r\n","import React, { Component } from \"react\";\r\nimport UserContext from '../utils/UserContext';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport \"./style.css\";\r\nimport mapboxgl from 'mapbox-gl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport EditDistrict from \"./EditDistrict\";\r\nimport ViewCandidates from './ViewCandidates';\r\nimport Vote from './Vote';\r\n\r\nmapboxgl.accessToken = \"pk.eyJ1IjoiZXNjaGVyZmFuIiwiYSI6ImNrMXdid2lyNTAwNmkzbW93bTNpMHE4N3YifQ.7Jg5xKMsj7Y29BJG74q7Aw\";\r\n\r\n\r\n// const ottawaLat = 45.416667;\r\n// const ottawaLong = -75.7;\r\n\r\nclass Landing extends Component {\r\n  // Setting the component's initial state\r\n  state = {\r\n    activeComponentId: 0,\r\n    map: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(this.state.activeComponentId === 0) {\r\n      // Is this the component with the map?\r\n      let voter = this.context.user;\r\n      const voterLatitude = voter._doc.location.coordinates.latitude;\r\n      const voterLongitude = voter._doc.location.coordinates.longitude;\r\n\r\n      const newMap = new mapboxgl.Map({\r\n        container: this.mapContainer,\r\n        style: 'mapbox://styles/mapbox/streets-v11',\r\n        center: [voterLongitude, voterLatitude],\r\n        zoom: 12\r\n      });\r\n      this.setState({ map: newMap });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  componentDidUpdate() {\r\n    if(this.state.activeComponentId === 0) {\r\n      let voter = this.context.user;\r\n      const voterLatitude = voter._doc.location.coordinates.latitude;\r\n      const voterLongitude = voter._doc.location.coordinates.longitude;\r\n\r\n      this.state.map.setCenter([voterLongitude, voterLatitude]);\r\n    }\r\n  }\r\n  \r\n  renderDefault = () => {\r\n    let voter = this.context.user;\r\n    return (\r\n      <div className=\"container-fluid full-screen\">\r\n        <div className=\"row\">\r\n            <div className=\"col-8 col-sm-9 mt-3 ml-3 bg-white text-center pt-2 mapFormWidget\">\r\n                Your district is {voter._doc.location.district}\r\n            </div>\r\n            <div className=\"col-3 col-sm-2 mt-3\">\r\n              <Button variant=\"secondary w-100\" \r\n                      onClick={ () => { this.setState({ activeComponentId: 2 })}} >\r\n                  Edit</Button>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n           <div ref={el => this.mapContainer = el} className=\"col mapContainer\" />\r\n        </div>\r\n        <div className=\"row pb-3\">\r\n            <div className=\"col\">\r\n                <Button variant=\"secondary w-100\" \r\n                    onClick={ () => { this.setState({ activeComponentId: 3 })}} >\r\n                    View Candidates</Button>\r\n            </div>\r\n            <div className=\"col\">\r\n                <Button variant=\"secondary w-100\"\r\n                    onClick={ () => { this.setState({ activeComponentId: 4 })}} >\r\n                    Vote</Button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }  \r\n\r\n  // // active component 1\r\n  // renderLoading = () => {\r\n  //   return <LoadingSpinner />;\r\n  // };\r\n\r\n  // active component 2\r\n  renderEditDistrict = () => {\r\n    const voter = this.context.user;\r\n    const location = {\r\n      streetNo: voter._doc.location.street.number,\r\n      streetName: voter._doc.location.street.name,\r\n      city: voter._doc.location.city,\r\n      province: voter._doc.location.state,\r\n      postcode: voter._doc.location.postcode\r\n    };\r\n  \r\n    return <EditDistrict location={location}/>;\r\n  };\r\n\r\n  \r\n  // active component 3\r\n  renderViewCandidates = () => {\r\n    return <ViewCandidates />;\r\n  }\r\n\r\n\r\n  // active component 4\r\n  renderVote = () => {\r\n    return <Vote />;\r\n  }\r\n\r\n  renderActiveComponent = () => {\r\n    switch(this.state.activeComponentId) {\r\n      case(4): {\r\n        return this.renderVote();\r\n      }\r\n\r\n      case(3): {\r\n          return this.renderViewCandidates();\r\n      }\r\n\r\n      case(2): {\r\n        return this.renderEditDistrict();\r\n      }\r\n\r\n      // case(1): {\r\n      //     return this.renderLoading();\r\n      // }\r\n\r\n      case(0):\r\n      default: {\r\n          return this.renderDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.renderActiveComponent();\r\n  }\r\n};\r\nLanding.contextType = UserContext;\r\n\r\nexport default Landing;\r\n","import React, { useState } from 'react';\r\nimport Login from \"./components/Login\";\r\nimport Landing from \"./components/Landing\";\r\nimport UserContext from './utils/UserContext';\r\n// import LoadingSpinner from './components/LoadingSpinner';\r\n\r\n// When debugging the React code, set the user data as though they logged in via Login.\r\n// When not debugging, comment out the below import.\r\n//import hannahWhite from './debugReact'; \r\n\r\nfunction App() {\r\n  const [user, setUser] = useState( null );\r\n  // FOR DEBUGGING REACT. Comment out and replace with the line above when in production.\r\n  //const [user, setUser] = useState(hannahWhite); \r\n  // END DEBUGGING REACT\r\n\r\n  // This React application was designed to have only two roots:\r\n  //   1. Login \r\n  //   2. Landing (after user has logged in)\r\n  //\r\n  // You cannot reach any of the components via a Router. This was done\r\n  // so that we do not need to check, in every component, if the user has logged\r\n  // in or not. The URL cannot reach any components except Login or Landing. \r\n  let component = null;\r\n  if(user != null) {\r\n    component = <Landing />\r\n  } else {\r\n    component = <Login />\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={ {\r\n      user: user,\r\n      handleLogin: (newUser) => {console.log(\"App Context \", newUser); setUser(newUser)}\r\n    } }>\r\n      { component }\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}